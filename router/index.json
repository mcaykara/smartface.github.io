[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/common/DeviceOS.js",
    "content": "module.exports = {\n  ios: \"iOS\",\n  android: \"Android\"\n};\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/DeviceOS.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "file",
    "name": "src/common/HistoryActions.js",
    "content": "module.exports = {\n  POP: \"POP\",\n  PUSH: \"PUSH\",\n  REPLACE: \"REPLACE\"\n};\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/HistoryActions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/common/RouteStore.js",
    "content": "var map = new WeakMap();\n\nclass RouteStore {\n  constructor() {}\n\n  add() {}\n\n  findByUrl(url) {}\n  findByPath(url) {}\n}\n\nmodule.exports = RouteStore;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/RouteStore.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "map",
    "memberof": "src/common/RouteStore.js",
    "static": true,
    "longname": "src/common/RouteStore.js~map",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/RouteStore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "class",
    "name": "RouteStore",
    "memberof": "src/common/RouteStore.js",
    "static": true,
    "longname": "src/common/RouteStore.js~RouteStore",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/RouteStore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/common/RouteStore.js~RouteStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/RouteStore.js~RouteStore#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "add",
    "memberof": "src/common/RouteStore.js~RouteStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/RouteStore.js~RouteStore#add",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "findByUrl",
    "memberof": "src/common/RouteStore.js~RouteStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/RouteStore.js~RouteStore#findByUrl",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "findByPath",
    "memberof": "src/common/RouteStore.js~RouteStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/common/RouteStore.js~RouteStore#findByPath",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/common/createHistory.js",
    "content": "\"use strict\";\nconst createMemoryHistory = require(\"./history\");\nconst { matchUrl } = require(\"./matchPath\");\n\n/**\n * Creates a new HistoryController instance\n * \n * @param {{?initialEntries: Array, ?initialIndex: number, ?keyLength: number, ?getUserConfirmation: function, sensitive: boolean, strict: boolean}} param0\n * @return {HistoryController}\n */\nfunction createHistory(\n  {\n    initialEntries = null,\n    initialIndex = null,\n    keyLength = null,\n    getUserConfirmation = null,\n    exact = false,\n    sensitive = true,\n    strict = false,\n    path\n  } = {}\n) {\n  let routeBlocker = (blockerFn, callback) => {\n    // console.log(`--- routeBlocker ${blockerFn} ${_preventDefault}`);\n    _preventDefault === false && getUserConfirmation\n      ? getUserConfirmation(blockerFn, callback)\n      : callback(true);\n  };\n\n  let _preventDefault;\n  const _options = {\n    exact,\n    sensitive,\n    strict,\n    path\n  };\n  /**\n   * @type {History}\n   */\n  let _history = createMemoryHistory({\n    initialEntries: initialEntries || [], // The initial URLs in the history stack\n    initialIndex: initialIndex || 0, // The starting index in the history stack\n    keyLength: keyLength || 20, // The length of location.key\n    // A function to use to confirm navigation with the user. Required\n    // if you return string prompts from transition hooks (see below)\n    getUserConfirmation: routeBlocker\n  });\n\n  const _listeners = new Set();\n  const _unlistenAll = new Set();\n  const _nodes = new Set();\n  let _prompt = null;\n  let _unblock;\n\n  function listener(location, action) {\n    _preventDefault === false &&\n      _listeners.forEach(handler => handler(location, action));\n    _preventDefault = false;\n  }\n\n  /**\n   * History wrapper\n   * @access package\n   * @class HistoryController\n   */\n  class HistoryController {\n    constructor() {}\n\n    clearBlocker() {\n      _unblock && _unblock();\n    }\n\n    /**\n     * Prevent history change event\n     */\n    preventDefault() {\n      _preventDefault = true;\n    }\n\n    clearPreventDefault() {\n      _preventDefault = false;\n    }\n\n    block(prompt) {\n      _prompt = prompt;\n      this.clearBlocker();\n      _unblock = _history.block(_prompt);\n\n      return () => {\n        _prompt = null;\n        _unblock();\n      };\n    }\n\n    getHistoryasArray() {\n      return _history.entries.map(item => item.pathname);\n    }\n\n    /**\n     * @param {object} [={}] props Node properties\n     * @return {HistoryController}\n     */\n    createNode(props = {}) {\n      const node = createHistory(props, this);\n      _nodes.add(node);\n      // bubbles history goback to root if go back could be possible.\n      node.onGoBack = () => {\n        if (_history.length > 0) {\n          // _listeners.forEach(listener => listener(_history.location, 'POP'))\n          _history.go(-1);\n        } else this.onGoBack && this.onGoBack();\n      };\n      // bubbles history push to root if push could be possible.\n      node.onPush = (path, data) => {\n        if (this.canPush(path)) {\n          this.push(path, data);\n        } else {\n          this.onPush && this.onPush(path, data);\n        }\n      };\n\n      return node;\n    }\n\n    /**\n     * Return all nodes\n     * @return {Set<HistoryController>}\n     */\n    get nodes() {\n      return new Set(_nodes);\n    }\n\n    /**\n     * @return {History}\n     */\n    get history() {\n      return _history;\n    }\n\n    /**\n     * Removes last history entry\n     *\n     * @todo notify all listeners as action is rollback\n     */\n    rollback() {\n      _preventDefault = true;\n      _history.rollback();\n      _preventDefault = false;\n    }\n\n    /**\n     * Disposes history\n     */\n    dispose() {\n      _history = null;\n    }\n\n    /**\n     * If the url is available to push or not.\n     *\n     * @param {string} url - Url will be pushed.\n     */\n    canPush(url) {\n      const res = matchUrl(url, _options);\n      return res !== null;\n    }\n\n    /**\n     * Pushes a new url to history\n     *\n     * @param {string} url - Url will be pushed.\n     * @param {object} routeData - Requested route data\n     */\n    push(url, routeData = {}) {\n      this.canPush(url)\n        ? _history.push(url, routeData)\n        : !_preventDefault &&\n          this.onPush &&\n          this.onPush(url, routeData, _prompt);\n      _preventDefault && this.clearPreventDefault();\n    }\n\n    /**\n     * If history can be gone back or not\n     *\n     * @return boolean\n     */\n    canGoBack() {\n      return _history.canGo(-1);\n    }\n\n    /**\n     * Calls History.goBack\n     */\n    goBack() {\n      this.canGoBack()\n        ? _history.goBack()\n        : !_preventDefault && this.onGoBack && this.onGoBack();\n      _preventDefault && this.clearPreventDefault();\n    }\n\n    /**\n     * Adds history change handler and returns unlisten function\n     *\n     * @param {HistoryListener} fn Event handler callback\n     * @return {function} unlisten function\n     */\n    listen(fn) {\n      const unlisten = new Set();\n\n      _listeners.add(fn);\n      const wrapper = (location, action) => {\n        !_preventDefault && fn(location, action);\n      };\n      unlisten.add(_history.listen(wrapper));\n      unlisten.forEach(item => _unlistenAll.add(item));\n      return () => {\n        unlisten.forEach(item => {\n          item();\n          _unlistenAll.delete(item);\n        });\n        _listeners.delete(fn);\n      };\n    }\n\n    /**\n     * Returns string representation of an instance\n     *\n     * @return {string}\n     */\n    toString() {\n      return \"[Object HistoryController]\";\n    }\n\n    /**\n     * Disposes a instance\n     */\n    dispose() {\n      _nodes.forEach(node => node.dispose());\n      _unlistenAll.forEach(item => item());\n      _unlistenAll.clear();\n      _listeners.clear();\n      _history = null;\n      this.onGoBack = null;\n    }\n  }\n\n  return new HistoryController();\n}\n\nmodule.exports = createHistory;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/createHistory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "createMemoryHistory",
    "memberof": "src/common/createHistory.js",
    "static": true,
    "longname": "src/common/createHistory.js~createMemoryHistory",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/createHistory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "matchUrl",
    "memberof": "src/common/createHistory.js",
    "static": true,
    "longname": "src/common/createHistory.js~matchUrl",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/createHistory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "createHistory",
    "memberof": "src/common/createHistory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/createHistory.js~createHistory",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/createHistory.js",
    "importStyle": null,
    "description": "Creates a new HistoryController instance",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "{?initialEntries: Array, ?initialIndex: number, ?keyLength: number, ?getUserConfirmation: function, sensitive: boolean, strict: boolean}"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HistoryController"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/common/createTransitionManager.js",
    "content": "// https://github.com/ReactTraining/history\n\nconst warning = require(\"./warning\");\n\n/**\n * @ignore\n */\nconst createTransitionManager = () => {\n  let prompt = null;\n\n  const setPrompt = nextPrompt => {\n    warning(prompt == null, \"A history supports only one prompt at a time\");\n\n    prompt = nextPrompt;\n\n    return () => {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  const confirmTransitionTo = (\n    location,\n    action,\n    getUserConfirmation,\n    callback\n  ) => {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      const result =\n        typeof prompt === \"function\" ? prompt(location, action) : prompt;\n\n      // if (typeof result === \"string\") {\n      if (typeof getUserConfirmation === \"function\") {\n        getUserConfirmation(result, callback);\n      } else {\n        warning(\n          false,\n          \"A history needs a getUserConfirmation function in order to use a prompt message\"\n        );\n\n        callback(true);\n      }\n      // } else {\n      //   // Return false from a transition hook to cancel the transition.\n      //   callback(result !== false);\n      // }\n    } else {\n      callback(true);\n    }\n  };\n\n  let listeners = [];\n\n  const appendListener = fn => {\n    let isActive = true;\n\n    const listener = (...args) => {\n      if (isActive) fn(...args);\n    };\n\n    listeners.push(listener);\n\n    return () => {\n      isActive = false;\n      listeners = listeners.filter(item => item !== listener);\n    };\n  };\n\n  const notifyListeners = (...args) => {\n    listeners.forEach(listener => listener(...args));\n  };\n\n  return {\n    setPrompt,\n    confirmTransitionTo,\n    appendListener,\n    notifyListeners\n  };\n};\n\nmodule.exports = createTransitionManager;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/createTransitionManager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "warning",
    "memberof": "src/common/createTransitionManager.js",
    "static": true,
    "longname": "src/common/createTransitionManager.js~warning",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/createTransitionManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "createTransitionManager",
    "memberof": "src/common/createTransitionManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/createTransitionManager.js~createTransitionManager",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/createTransitionManager.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 8,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "{\"setPrompt\": *, \"confirmTransitionTo\": *, \"appendListener\": *, \"notifyListeners\": *}"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/common/history.js",
    "content": "// https://github.com/ReactTraining/history\n\"use strict\";\n\nconst resolvePathname = require(\"resolve-pathname/umd/resolve-pathname\");\nconst parsePath = require(\"./parseUrl\");\n\nconst warning = require(\"./warning\");\nconst createPath = location => {\n  const { pathname, search, hash } = location;\n\n  let path = pathname || \"/\";\n\n  if (search && search !== \"?\")\n    path += search.charAt(0) === \"?\" ? search : `?${search}`;\n\n  if (hash && hash !== \"#\") path += hash.charAt(0) === \"#\" ? hash : `#${hash}`;\n\n  return path;\n};\n\nconst createTransitionManager = require(\"./createTransitionManager\");\n\nconst clamp = (n, lowerBound, upperBound) =>\n  Math.min(Math.max(n, lowerBound), upperBound);\n\nconst createLocation = (path, state, key, currentLocation) => {\n  let location;\n  if (typeof path === \"string\") {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = Object.assign({}, path);\n\n    if (location.pathname === undefined) location.pathname = \"\";\n\n    if (location.search) {\n      if (location.search.charAt(0) !== \"?\")\n        location.search = \"?\" + location.search;\n    } else {\n      location.search = \"\";\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== \"#\") location.hash = \"#\" + location.hash;\n    } else {\n      location.hash = \"\";\n    }\n\n    if (state !== undefined && location.state === undefined)\n      location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError(\n        'Pathname \"' +\n          location.pathname +\n          '\" could not be decoded. ' +\n          \"This is likely caused by an invalid percent-encoding.\"\n      );\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== \"/\") {\n      location.pathname = resolvePathname(\n        location.pathname,\n        currentLocation.pathname\n      );\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = \"/\";\n    }\n  }\n\n  return location;\n};\n\n/**\n * Creates a history object that stores locations in memory.\n * @ignore\n * @return {History}\n */\nconst createMemoryHistory = (props = {}) => {\n  const {\n    getUserConfirmation,\n    initialEntries = [\"/\"],\n    initialIndex = 0,\n    keyLength = 6\n  } = props;\n\n  const transitionManager = createTransitionManager();\n\n  const setState = nextState => {\n    Object.assign(history, nextState);\n\n    history.length = history.entries.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  const createKey = () =>\n    Math.random()\n      .toString(36)\n      .substr(2, keyLength);\n\n  const index = clamp(initialIndex, 0, initialEntries.length - 1);\n  const entries = initialEntries.map(\n    entry =>\n      typeof entry === \"string\"\n        ? createLocation(entry, undefined, createKey())\n        : createLocation(entry, undefined, entry.key || createKey())\n  );\n\n  // Public interface\n\n  const createHref = createPath;\n\n  const confirmTransitionTo = (\n    path,\n    action,\n    state,\n    getUserConfirmation,\n    handler,\n    key = \"\"\n  ) => {\n    const location = createLocation(\n      path,\n      state,\n      key || createKey(),\n      history.location\n    );\n    transitionManager.confirmTransitionTo(\n      location,\n      action,\n      getUserConfirmation,\n      ok => handler(location, ok)\n    );\n  };\n\n  const push = (path, state) => {\n    warning(\n      !(\n        typeof path === \"object\" &&\n        path.state !== undefined &&\n        state !== undefined\n      ),\n      \"You should avoid providing a 2nd state argument to push when the 1st \" +\n        \"argument is a location-like object that already has state; it is ignored\"\n    );\n\n    const action = \"PUSH\";\n    const location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(\n      location,\n      action,\n      getUserConfirmation,\n      ok => {\n        if (!ok) return;\n\n        const prevIndex = history.index;\n        const nextIndex = prevIndex + 1;\n\n        const nextEntries = history.entries.slice(0);\n        if (nextEntries.length > nextIndex) {\n          nextEntries.splice(\n            nextIndex,\n            nextEntries.length - nextIndex,\n            location\n          );\n        } else {\n          nextEntries.push(location);\n        }\n\n        setState({\n          action,\n          location,\n          index: nextIndex,\n          entries: nextEntries\n        });\n      }\n    );\n  };\n\n  const replace = (path, state) => {\n    warning(\n      !(\n        typeof path === \"object\" &&\n        path.state !== undefined &&\n        state !== undefined\n      ),\n      \"You should avoid providing a 2nd state argument to replace when the 1st \" +\n        \"argument is a location-like object that already has state; it is ignored\"\n    );\n\n    const action = \"REPLACE\";\n    const location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(\n      location,\n      action,\n      getUserConfirmation,\n      ok => {\n        if (!ok) return;\n\n        history.entries[history.index] = location;\n\n        setState({ action, location });\n      }\n    );\n  };\n\n  const go = n => {\n    const nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n\n    const action = \"POP\";\n    const location = history.entries[nextIndex];\n\n    transitionManager.confirmTransitionTo(\n      location,\n      action,\n      getUserConfirmation,\n      ok => {\n        if (ok) {\n          setState({\n            action,\n            location,\n            index: nextIndex\n          });\n        } else {\n          // Mimic the behavior of DOM histories by\n          // causing a render after a cancelled POP.\n          setState();\n        }\n      }\n    );\n  };\n\n  const getNextLocation = n => {\n    const nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    return history.entries[nextIndex];\n  };\n\n  const goBack = () => go(-1);\n\n  const goForward = () => go(1);\n  const clear = () => {\n    history.index = 0;\n    history.entries = [];\n    history.length = 0;\n  };\n\n  const rollback = () => {\n    history.entries.pop();\n    history.length = history.length;\n    history.index--;\n  };\n\n  const silencePush = (path, state) => {\n    const action = \"PUSH\";\n    const location = createLocation(path, state, createKey(), history.location);\n\n    history.entries.push(location);\n    history.length = history.length;\n    history.index++;\n  };\n\n  const canGo = n => {\n    const nextIndex = history.index + n;\n\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  };\n\n  const block = (prompt = false) => transitionManager.setPrompt(prompt);\n\n  const listen = listener => transitionManager.appendListener(listener);\n\n  /**\n   * @type History\n   */\n  const history = {\n    length: entries.length,\n    action: \"POP\",\n    location: entries[index],\n    index,\n    entries,\n    createHref,\n    push,\n    silencePush,\n    replace,\n    rollback,\n    go,\n    clear,\n    goBack,\n    goForward,\n    canGo,\n    block,\n    listen,\n    confirmTransitionTo\n  };\n\n  return history;\n};\n\nmodule.exports = createMemoryHistory;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/history.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "resolvePathname",
    "memberof": "src/common/history.js",
    "static": true,
    "longname": "src/common/history.js~resolvePathname",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/history.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "parsePath",
    "memberof": "src/common/history.js",
    "static": true,
    "longname": "src/common/history.js~parsePath",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/history.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "warning",
    "memberof": "src/common/history.js",
    "static": true,
    "longname": "src/common/history.js~warning",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/history.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "createPath",
    "memberof": "src/common/history.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/history.js~createPath",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/history.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "location",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "createTransitionManager",
    "memberof": "src/common/history.js",
    "static": true,
    "longname": "src/common/history.js~createTransitionManager",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/history.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "clamp",
    "memberof": "src/common/history.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/history.js~clamp",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/history.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "n",
        "types": [
          "*"
        ]
      },
      {
        "name": "lowerBound",
        "types": [
          "*"
        ]
      },
      {
        "name": "upperBound",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "createLocation",
    "memberof": "src/common/history.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/history.js~createLocation",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/history.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "currentLocation",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "createMemoryHistory",
    "memberof": "src/common/history.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/history.js~createMemoryHistory",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/history.js",
    "importStyle": null,
    "description": "Creates a history object that stores locations in memory.",
    "lineNumber": 97,
    "ignore": true,
    "return": {
      "nullable": null,
      "types": [
        "History"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "props",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/common/index.js",
    "content": "module.exports = {\n  HistoryActions: require(\"./HistoryActions\"),\n  matchPatch: require(\"./matchPatch\"),\n  DeviceOS: require(\"./DeviceOS\"),\n  matchRoutes: require(\"./matchRoutes\"),\n  history: require(\"./history\")\n};\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/common/matchPath.js",
    "content": "/* from react-router */\n\nconst pathToRegexp = require(\"path-to-regexp\");\nconst parseUrl = require(\"./parseUrl\");\nconst patternCache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\n/**\n * @ignore\n * @param {*} pattern\n * @param {*} options\n */\nconst compilePath = (pattern, options) => {\n  const cacheKey = `${options.end}${options.strict}${options.sensitive}`;\n  const cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n\n  if (cache[pattern]) return cache[pattern];\n\n  const keys = [];\n  const re = pathToRegexp(pattern, keys, options);\n  const compiledPattern = {\n    re,\n    keys\n  };\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n\n  return compiledPattern;\n};\n\n/**\n * Public API for matching a URL pathname to a path pattern.\n * @ignore\n */\nconst matchPath = (pathname, options = {}, parent) => {\n  if (typeof options === \"string\")\n    options = {\n      path: options\n    };\n\n  const { path, exact = false, strict = false, sensitive = false } = options;\n\n  if (path == null) return parent;\n\n  const { re, keys } = compilePath(path, {\n    end: exact,\n    strict,\n    sensitive\n  });\n  const match = re.exec(pathname);\n\n  if (!match) return null;\n\n  const url = match.shift();\n  const values = match.slice();\n  // [url, ...values] = ;\n  const isExact = pathname === url;\n\n  if (exact && !isExact) return null;\n\n  return {\n    path, // the path pattern used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n    isExact, // whether or not we matched exactly\n    params: keys.reduce((memo, key, index) => {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\n\nconst matchUrl = (url, options) => {\n  const res = matchPath(parseUrl(url).pathname, options);\n  return res;\n};\n\nmodule.exports = {\n  compilePath,\n  matchPath,\n  matchUrl\n};\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/matchPath.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "pathToRegexp",
    "memberof": "src/common/matchPath.js",
    "static": true,
    "longname": "src/common/matchPath.js~pathToRegexp",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/matchPath.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "parseUrl",
    "memberof": "src/common/matchPath.js",
    "static": true,
    "longname": "src/common/matchPath.js~parseUrl",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/matchPath.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "patternCache",
    "memberof": "src/common/matchPath.js",
    "static": true,
    "longname": "src/common/matchPath.js~patternCache",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/matchPath.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "cacheLimit",
    "memberof": "src/common/matchPath.js",
    "static": true,
    "longname": "src/common/matchPath.js~cacheLimit",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/matchPath.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "cacheCount",
    "memberof": "src/common/matchPath.js",
    "static": true,
    "longname": "src/common/matchPath.js~cacheCount",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/matchPath.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "compilePath",
    "memberof": "src/common/matchPath.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/matchPath.js~compilePath",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/matchPath.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 14,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pattern",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "matchPath",
    "memberof": "src/common/matchPath.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/matchPath.js~matchPath",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/matchPath.js",
    "importStyle": null,
    "description": "Public API for matching a URL pathname to a path pattern.",
    "lineNumber": 39,
    "ignore": true,
    "params": [
      {
        "name": "pathname",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"path\": *, \"url\": *, \"isExact\": *, \"params\": *}"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "matchUrl",
    "memberof": "src/common/matchPath.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/matchPath.js~matchUrl",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/matchPath.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/common/matchRoutes.js",
    "content": "// code from react-router\n\n/**\n *\n * @ignore\n *\n * @param {Array<Route>} routes\n * @param {string} pathname\n * @param {Array} branch\n */\nconst matchRoutes = (routes, pathname, /*not public API*/ branch = []) => {\n  routes.some(route => {\n    const match = route.hasPath()\n      ? route.matchPath(pathname)\n      : branch.length\n        ? branch[branch.length - 1].match\n        : {\n            // ensure we're using the exact code for default root match\n            path: \"/\",\n            url: \"/\",\n            params: {},\n            isExact: pathname === \"/\"\n          };\n\n    if (match) {\n      // if (match && route.routeShouldMatch(match)) {\n      branch.push({\n        route: route,\n        match\n      });\n      const children = route.map(child => {\n        return child;\n      });\n\n      matchRoutes(children, pathname, branch);\n    }\n\n    return match;\n  });\n\n  return branch;\n};\n\nmodule.exports = matchRoutes;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/matchRoutes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "matchRoutes",
    "memberof": "src/common/matchRoutes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/matchRoutes.js~matchRoutes",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/matchRoutes.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 11,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Route>"
        ],
        "spread": false,
        "optional": false,
        "name": "routes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pathname",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "branch",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/common/parseUrl.js",
    "content": "const parseUrl = path => {\n  let pathname = path || \"/\";\n  let search = \"\";\n  let hash = \"\";\n\n  const hashIndex = pathname.indexOf(\"#\");\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  const searchIndex = pathname.indexOf(\"?\");\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname,\n    search: search === \"?\" ? \"\" : search,\n    hash: hash === \"#\" ? \"\" : hash\n  };\n};\n\nmodule.exports = parseUrl;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/parseUrl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "parseUrl",
    "memberof": "src/common/parseUrl.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/parseUrl.js~parseUrl",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/parseUrl.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"pathname\": *, \"search\": *, \"hash\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/common/warning.js",
    "content": "module.exports = function(condition, message) {\n  !condition && console.log(message);\n};\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/common/warning.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "exports",
    "memberof": "src/common/warning.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/common/warning.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/common/warning.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "condition",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/native/AndroidRenderer.js",
    "content": "const Renderer = require(\"./Renderer\");\nconst Application = require(\"sf-core/application\");\n\n/**\n * Rendering strategy for Android\n * It encapsulates all logic to display pages on Android\n *\n * @class\n * @access package\n * @extends {Renderer}\n */\nclass AndroidRenderer extends Renderer {\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  setChildControllers(controllers) {\n    this._rootController.childControllers = controllers;\n  }\n\n  /**\n   * @override\n   */\n  pushChild(page, animated = true) {\n    this._rootController.push &&\n      this._rootController.push({ controller: page, animated: animated });\n  }\n\n  /**\n   * @override\n   */\n  onNavigationControllerTransition(fn) {\n    if (this._rootController.onTransition) {\n      this._rootController.onTransition = fn;\n      return () => (this._rootController.onTransition = () => null);\n    }\n\n    return () => null;\n  }\n\n  /**\n   * @override\n   */\n  popChild(animated = true) {\n    this._rootController.pop &&\n      this._rootController.pop({ animated: animated });\n  }\n\n  /**\n   * @override\n   */\n  show(page) {\n    Application.setRootController(page);\n  }\n}\n\nmodule.exports = AndroidRenderer;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/AndroidRenderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "Renderer",
    "memberof": "src/native/AndroidRenderer.js",
    "static": true,
    "longname": "src/native/AndroidRenderer.js~Renderer",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/AndroidRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "Application",
    "memberof": "src/native/AndroidRenderer.js",
    "static": true,
    "longname": "src/native/AndroidRenderer.js~Application",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/AndroidRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "class",
    "name": "AndroidRenderer",
    "memberof": "src/native/AndroidRenderer.js",
    "static": true,
    "longname": "src/native/AndroidRenderer.js~AndroidRenderer",
    "access": "package",
    "export": false,
    "importPath": "@smartface/router/src/native/AndroidRenderer.js",
    "importStyle": null,
    "description": "Rendering strategy for Android\nIt encapsulates all logic to display pages on Android",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "Renderer"
    ]
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/native/AndroidRenderer.js~AndroidRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/AndroidRenderer.js~AndroidRenderer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "setChildControllers",
    "memberof": "src/native/AndroidRenderer.js~AndroidRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/AndroidRenderer.js~AndroidRenderer#setChildControllers",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "override": true,
    "params": [
      {
        "name": "controllers",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "pushChild",
    "memberof": "src/native/AndroidRenderer.js~AndroidRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/AndroidRenderer.js~AndroidRenderer#pushChild",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "override": true,
    "params": [
      {
        "name": "page",
        "types": [
          "*"
        ]
      },
      {
        "name": "animated",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "onNavigationControllerTransition",
    "memberof": "src/native/AndroidRenderer.js~AndroidRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/AndroidRenderer.js~AndroidRenderer#onNavigationControllerTransition",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "override": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "popChild",
    "memberof": "src/native/AndroidRenderer.js~AndroidRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/AndroidRenderer.js~AndroidRenderer#popChild",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "override": true,
    "params": [
      {
        "name": "animated",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "show",
    "memberof": "src/native/AndroidRenderer.js~AndroidRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/AndroidRenderer.js~AndroidRenderer#show",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "override": true,
    "params": [
      {
        "name": "page",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "src/native/BottomTabBarRouter.js",
    "content": "\"use strict\";\n\n/**\n * @typedef {object<string,string|object>} BottomTabBarItem Represent {@link TabBarItem} params\n * @property {Image} icon\n * @property {string} title\n */\n\n/**\n * @typedef {RouterParams} BottomTabBarRouterParams\n * @property {Array<BottomTabBarItem>} items BottomTabBarItem collection\n * @property {object} tabbarParams See {@link BottomTabbarController}\n */\n\nconst NativeRouterBase = require(\"./NativeRouterBase\");\nconst BottomTabBarController = require(\"sf-core/ui/bottomtabbarcontroller\");\nconst createRenderer = require(\"./createRenderer\");\nconst TabBarItem = require(\"sf-core/ui/tabbaritem\");\n\nfunction functionMaybe(val) {\n  return typeof val === \"function\" ? val() : val;\n}\n\n/**\n * @private\n * @param {TabBarItem} item\n */\nfunction createTabBarItem(item) {\n  return item instanceof TabBarItem ? item : new TabBarItem(item);\n}\n\nconst userTabStatus = {\n  IDLE: 0,\n  WAITING: 1,\n  DONE: 2\n};\n\n/**\n * It creates {@link BottomTabbarController} and manages its behavours and routes.\n *\n * @class\n * @extends {Router}\n * @example\n * const {BottommTabBarRouter, Route} = require('@smartface/router')\n * const Image = require('sf-core/ui/image');\n * const Color = require('sf-core/ui/color');\n *\n * var router = Router.of({\n *  path: \"/\",\n *  routes: [\n *    BottomTabBarRouter.of(\n *      path: '/tabs',\n *      tabbarParams: () => ({\n *        itemColor: {normal: Color.BLACK, selected: Color.BLUE},\n *        backgroundColor: Color.BLUE,\n *      }),\n *      tabbarItems: [\n *        { title: \"Page1\", icon: Image.createFromFile(\"images://icon1.png\") },\n *        { title: \"Page2\", icon: Image.createFromFile(\"images://icon2.png\") },\n *      ],\n *      routes: [\n *        Route.of({\n *          routeDidEnter: (router, route) => {\n *          },\n *          routeDidExit: (router, route) => {\n *          },\n *          path: \"/tabs/page1\",\n *          build((router, route) => {\n *            const Page1 = require('/pages/Page1');\n *            return new Page1(route.getState().routeData, router);\n *          })\n *        }),\n *        Route.of({\n *          path: \"/tabs/page2\",\n *          build((router, route) => {\n *            const Page2 = require('/pages/Page2');\n *            return new Page2(route.getState().routeData, router);\n *          });\n *        });\n *      ]\n *    )]\n * })\n *\n * @since 1.0.0\n */\nclass BottomTabBarRouter extends NativeRouterBase {\n  /**\n   * Builds OS specific NaitveRouter\n   *\n   * @static\n   * @param {BottomTabBarRouterParams} params\n   */\n  static of(params) {\n    params.renderer = createRenderer();\n    return new BottomTabBarRouter(params);\n  }\n\n  /**\n   * @constructor\n   * @param {BottomTabBarRouterParams} param\n   */\n  constructor({\n    path = \"\",\n    routes = [],\n    exact = false,\n    renderer = null,\n    to = null,\n    tabbarParams = {},\n    items = [],\n    isRoot = false,\n    routerDidEnter,\n    routerDidExit,\n    routeShouldMatch\n  }) {\n    super({\n      path,\n      routes,\n      exact,\n      to,\n      isRoot,\n      routerDidEnter,\n      routerDidExit,\n      routeShouldMatch\n    });\n\n    this._renderer = renderer;\n    this._renderer.setRootController(new BottomTabBarController(tabbarParams));\n    this._visitedIndexes = { length: 0 };\n    this._fromRouter = false;\n    this._items = items;\n    this._tabStatus = userTabStatus.IDLE;\n\n    this._renderer._rootController.shouldSelectByIndex = ({ index }) => {\n      // TabbarItem should be changed\n      return this.shouldSelectByIndex(index);\n    };\n\n    this._renderer._rootController.didSelectByIndex = ({ index }) => {};\n\n    this._fromRouter = true;\n\n    // Initilaze BottomTabBarController's TabBarItems\n    this._renderer._rootController.tabBar = tabbarParams();\n  }\n\n  initialize(parentHistory, onHistoryChange) {\n    super.initialize(parentHistory, onHistoryChange);\n    // Initilaze BottomTabBarController's child controllers\n    this._renderer.setChildControllers(\n      this._routes.map(route => route.build(this, route))\n    );\n\n    this._renderer.setTabBarItems(\n      functionMaybe(this._items).map(createTabBarItem)\n    );\n    this._renderer._rootController.show();\n    // Overrides build method\n    this.build = () => this._renderer._rootController;\n  }\n\n  /**\n   * @ignore\n   * @protected\n   * @param {number} index\n   */\n  shouldSelectByIndex(index) {\n    this._fromRouter = false;\n    if (\n      (this._tabStatus === userTabStatus.IDLE &&\n        index !== this._currentIndex) ||\n      this._tabStatus === userTabStatus.WAITING\n    ) {\n      this._tabStatus = userTabStatus.WAITING;\n      /*(async function(scope) {\n        console.log(`${scope} ${scope._routes[index]} ${index}`);\n        scope.pushRoute(scope._routes[index]);\n        return scope;\n      })(this)\n        .then(scope => {\n          scope._fromRouter = true;\n        })\n        .catch(e => alert(e.message + \" \" + e.stack, \"Error\"));*/\n\n      setTimeout(() => {\n        this.pushRoute(this._routes[index]);\n        this._fromRouter = true;\n      });\n    }\n\n    return (\n      this._currentIndex != index && this._tabStatus === userTabStatus.IDLE\n    );\n  }\n\n  /**\n   * @override\n   */\n  renderMatches(matches, state, action, target) {\n    this._fromRouter = true;\n\n    if (matches.length > 0) {\n      const { match: next } = matches[matches.length - 1];\n      const { match } = matches[1] || matches[0];\n      // const lastIndex = this.resolveIndex(next.path);\n      const index = this.resolveIndex(match.path);\n      // sets target tabbar item as visited.\n      // selects target tabbaritem by index\n      this._renderer.setSelectedIndex(index);\n      this._renderer._rootController.show();\n      // this.isVisited(index) && this.activateIndex(index);\n      this.setVisited(index, next.path);\n      this._currentIndex = index;\n      if (userTabStatus.WAITING) this._tabStatus = userTabStatus.IDLE;\n    }\n\n    super.renderMatches(matches, state, action, target);\n\n    this._fromRouter = false;\n  }\n\n  /**\n   * Sets TabBarItems visited by TabBarItem index\n   *\n   * @protected\n   * @param {number} index\n   * @param {string} path\n   */\n  setVisited(index, path) {\n    if (index < 0) return;\n    this._visitedIndexes[index] = {\n      path\n    };\n    this._visitedIndexes.length++;\n  }\n\n  /**\n   * CHecks if TabBarItem is visited before\n   *\n   * @protected\n   * @param {number} index\n   * @return {boolean}\n   */\n  isVisited(index) {\n    return !!this._visitedIndexes[index];\n  }\n\n  /**\n   * Finds child route's index by path\n   *\n   * @protected\n   * @param {string} path\n   */\n  resolveIndex(path) {\n    return this._routes.findIndex(\n      route => route.getUrlPath() === path || route.getRedirectto() === path\n    );\n  }\n\n  /**\n   * Finds child route by index\n   *\n   * @protected\n   * @param {number} index\n   */\n  resolveRoute(index) {\n    return this._routes.find((route, ind) => ind === index);\n  }\n\n  /**\n   * @override\n   */\n  dispose() {\n    super.dispose();\n    this._unlistener();\n    this._renderer.dispose();\n    this._renderer._rootController.didSelectByIndex = () => null;\n    this._items = null;\n    this._renderer = null;\n  }\n\n  push(path, routeData = {}) {\n    console.log(\n      `${path} ${this._fromRouter} ${this.resolveIndex(path)} ${\n        this._tabStatus\n      }`\n    );\n    if (this._fromRouter === false) {\n      console.log(`bottombar.push`);\n      const index = this.resolveIndex(path);\n      if (this.isVisited(index)) {\n        return super.push(this._visitedIndexes[index].path, routeData);\n      }\n    }\n\n    return super.push(path, routeData);\n  }\n\n  /**\n   * Before route entered\n   *\n   * @event\n   * @protected\n   */\n  routeWillEnter(route) {\n    // const state = route.getState();\n    // this.routetoIndex(this.resolveIndex(state.match.path));\n  }\n}\n\nmodule.exports = BottomTabBarRouter;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/BottomTabBarRouter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "typedef",
    "name": "BottomTabBarItem",
    "memberof": "src/native/BottomTabBarRouter.js",
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarItem",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Image"
        ],
        "spread": false,
        "optional": false,
        "name": "icon",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object<string,string|object>"
      ],
      "optional": false,
      "name": "BottomTabBarItem"
    }
  },
  {
    "__docId__": 101,
    "kind": "typedef",
    "name": "BottomTabBarRouterParams",
    "memberof": "src/native/BottomTabBarRouter.js",
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouterParams",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<BottomTabBarItem>"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "BottomTabBarItem collection"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "tabbarParams",
        "description": "See {@link BottomTabbarController}"
      }
    ],
    "type": {
      "types": [
        "RouterParams"
      ],
      "optional": false,
      "name": "BottomTabBarRouterParams"
    }
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "BottomTabBarController",
    "memberof": "src/native/BottomTabBarRouter.js",
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarController",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/BottomTabBarRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "createRenderer",
    "memberof": "src/native/BottomTabBarRouter.js",
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~createRenderer",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/BottomTabBarRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "TabBarItem",
    "memberof": "src/native/BottomTabBarRouter.js",
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~TabBarItem",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/BottomTabBarRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "functionMaybe",
    "memberof": "src/native/BottomTabBarRouter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~functionMaybe",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/BottomTabBarRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "createTabBarItem",
    "memberof": "src/native/BottomTabBarRouter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~createTabBarItem",
    "access": "private",
    "export": false,
    "importPath": "@smartface/router/src/native/BottomTabBarRouter.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "TabBarItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "userTabStatus",
    "memberof": "src/native/BottomTabBarRouter.js",
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~userTabStatus",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/BottomTabBarRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "{\"IDLE\": *, \"WAITING\": number, \"DONE\": number}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "class",
    "name": "BottomTabBarRouter",
    "memberof": "src/native/BottomTabBarRouter.js",
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/BottomTabBarRouter.js",
    "importStyle": null,
    "description": "It creates {@link BottomTabbarController} and manages its behavours and routes.",
    "examples": [
      "const {BottommTabBarRouter, Route} = require('@smartface/router')\nconst Image = require('sf-core/ui/image');\nconst Color = require('sf-core/ui/color');\n\nvar router = Router.of({\n path: \"/\",\n routes: [\n   BottomTabBarRouter.of(\n     path: '/tabs',\n     tabbarParams: () => ({\n       itemColor: {normal: Color.BLACK, selected: Color.BLUE},\n       backgroundColor: Color.BLUE,\n     }),\n     tabbarItems: [\n       { title: \"Page1\", icon: Image.createFromFile(\"images://icon1.png\") },\n       { title: \"Page2\", icon: Image.createFromFile(\"images://icon2.png\") },\n     ],\n     routes: [\n       Route.of({\n         routeDidEnter: (router, route) => {\n         },\n         routeDidExit: (router, route) => {\n         },\n         path: \"/tabs/page1\",\n         build((router, route) => {\n           const Page1 = require('/pages/Page1');\n           return new Page1(route.getState().routeData, router);\n         })\n       }),\n       Route.of({\n         path: \"/tabs/page2\",\n         build((router, route) => {\n           const Page2 = require('/pages/Page2');\n           return new Page2(route.getState().routeData, router);\n         });\n       });\n     ]\n   )]\n})"
    ],
    "lineNumber": 86,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "Router"
    ]
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "of",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter.of",
    "access": "public",
    "description": "Builds OS specific NaitveRouter",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "BottomTabBarRouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BottomTabBarRouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "param",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "_renderer",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#_renderer",
    "access": "private",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "_visitedIndexes",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#_visitedIndexes",
    "access": "private",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "{\"length\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "_fromRouter",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#_fromRouter",
    "access": "private",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "_items",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#_items",
    "access": "private",
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "_tabStatus",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#_tabStatus",
    "access": "private",
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 146,
    "undocument": true,
    "params": [
      {
        "name": "parentHistory",
        "types": [
          "*"
        ]
      },
      {
        "name": "onHistoryChange",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "build",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#build",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "shouldSelectByIndex",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#shouldSelectByIndex",
    "access": "protected",
    "description": "",
    "lineNumber": 166,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "renderMatches",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#renderMatches",
    "access": "public",
    "description": "",
    "lineNumber": 198,
    "override": true,
    "params": [
      {
        "name": "matches",
        "types": [
          "*"
        ]
      },
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "target",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "_currentIndex",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#_currentIndex",
    "access": "private",
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "setVisited",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#setVisited",
    "access": "protected",
    "description": "Sets TabBarItems visited by TabBarItem index",
    "lineNumber": 228,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "isVisited",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#isVisited",
    "access": "protected",
    "description": "CHecks if TabBarItem is visited before",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "resolveIndex",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#resolveIndex",
    "access": "protected",
    "description": "Finds child route's index by path",
    "lineNumber": 253,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "resolveRoute",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#resolveRoute",
    "access": "protected",
    "description": "Finds child route by index",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#dispose",
    "access": "public",
    "description": "",
    "lineNumber": 272,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "push",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#push",
    "access": "public",
    "description": null,
    "lineNumber": 281,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "routeData",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "routeWillEnter",
    "memberof": "src/native/BottomTabBarRouter.js~BottomTabBarRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/BottomTabBarRouter.js~BottomTabBarRouter#routeWillEnter",
    "access": "protected",
    "description": "Before route entered",
    "lineNumber": 304,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "route",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/native/IOSRenderer.js",
    "content": "\"use strict\";\n\nconst Renderer = require(\"./Renderer\");\nconst Animator = require(\"./iOSAnimator\");\n\n/**\n * Rendering strategy for iOS\n * It encapsulates all logic to display pages on iOS\n *\n * @class\n * @access package\n * @extends {Renderer}\n */\nclass IOSRenderer extends Renderer {\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  setChildControllers(controllers) {\n    this._rootController.childControllers = controllers;\n  }\n\n  setSelectedIndex(index) {\n    // if (this._rootController.shouldSelectByIndex({index})) {\n    super.setSelectedIndex(index);\n    // this._rootController.didSelectByIndex({index});\n    // }\n  }\n\n  /**\n   * @override\n   */\n  showWithTransition(fromPage, toPage, duration = 0, options = 0 << 20) {\n    new Animator(this._rootController)\n      .onAnimate((container, from, to, params) => {\n        this.addChild(to);\n      })\n      .onFinish((finished, container, from, to, params) => {\n        to.nativeObject.didMoveToParentViewController(container.nativeObject);\n        this.removeChild(from);\n      })\n      .once(true)\n      .start(fromPage, toPage, duration, options);\n  }\n\n  /**\n   * @override\n   */\n  pushChild(page, animated = true) {\n    this.makeRootVisible();\n    this._rootController.push &&\n      this._rootController.push({ controller: page, animated });\n  }\n\n  /**\n   * @override\n   */\n  onNavigationControllerTransition(fn) {\n    this._rootController.onTransition = fn;\n    return () => (this._rootController.onTransition = () => null);\n  }\n\n  /**\n   * @override\n   */\n  popChild(animated = true) {\n    this.makeRootVisible();\n    if (this._rootController.childControllers.length > 1)\n      this._rootController.pop({ animated });\n  }\n\n  /**\n   */\n  popTo(index) {\n    this.setasRoot();\n    this._rootController.popTo(index);\n  }\n\n  /**\n   * @override\n   */\n  removeChild(page) {\n    page.nativeObject.removeFromParentViewController();\n    page.nativeObject.view.removeFromSuperview();\n  }\n\n  /**\n   * @override\n   */\n  addChild(page) {\n    this.makeRootVisible();\n    page.nativeObject.view &&\n      this._rootController.nativeObject.view.addSubview(page.nativeObject.view);\n  }\n\n  /**\n   * @override\n   */\n  addPageViewController(page) {\n    this._rootController.nativeObject.addChildViewController(page.nativeObject);\n  }\n\n  /**\n   * @override\n   */\n  show(page) {\n    if (this._currentPage === page) return;\n\n    if (this._currentPage) {\n      // this.showWithTransition(this._currentPage, page);\n      this.removeChild(this._currentPage);\n    }\n    // else {\n    this.addPageViewController(page);\n    this.addChild(page);\n    page.nativeObject.didMoveToParentViewController(\n      this._rootController.nativeObject\n    );\n    // }\n\n    this._currentPage = page;\n\n    this.makeRootVisible();\n  }\n}\n\nmodule.exports = IOSRenderer;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/IOSRenderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "Renderer",
    "memberof": "src/native/IOSRenderer.js",
    "static": true,
    "longname": "src/native/IOSRenderer.js~Renderer",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/IOSRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "Animator",
    "memberof": "src/native/IOSRenderer.js",
    "static": true,
    "longname": "src/native/IOSRenderer.js~Animator",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/IOSRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "IOSRenderer",
    "memberof": "src/native/IOSRenderer.js",
    "static": true,
    "longname": "src/native/IOSRenderer.js~IOSRenderer",
    "access": "package",
    "export": false,
    "importPath": "@smartface/router/src/native/IOSRenderer.js",
    "importStyle": null,
    "description": "Rendering strategy for iOS\nIt encapsulates all logic to display pages on iOS",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "Renderer"
    ]
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "setChildControllers",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#setChildControllers",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "override": true,
    "params": [
      {
        "name": "controllers",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "setSelectedIndex",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#setSelectedIndex",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "showWithTransition",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#showWithTransition",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "override": true,
    "params": [
      {
        "name": "fromPage",
        "types": [
          "*"
        ]
      },
      {
        "name": "toPage",
        "types": [
          "*"
        ]
      },
      {
        "name": "duration",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "pushChild",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#pushChild",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "override": true,
    "params": [
      {
        "name": "page",
        "types": [
          "*"
        ]
      },
      {
        "name": "animated",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "onNavigationControllerTransition",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#onNavigationControllerTransition",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "override": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "popChild",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#popChild",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "override": true,
    "params": [
      {
        "name": "animated",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": null
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "popTo",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#popTo",
    "access": "public",
    "description": "",
    "lineNumber": 80,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "removeChild",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#removeChild",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "override": true,
    "params": [
      {
        "name": "page",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "addChild",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#addChild",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "override": true,
    "params": [
      {
        "name": "page",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "addPageViewController",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#addPageViewController",
    "access": "public",
    "description": "",
    "lineNumber": 105,
    "override": true,
    "params": [
      {
        "name": "page",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "show",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#show",
    "access": "public",
    "description": "",
    "lineNumber": 112,
    "override": true,
    "params": [
      {
        "name": "page",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "_currentPage",
    "memberof": "src/native/IOSRenderer.js~IOSRenderer",
    "static": false,
    "longname": "src/native/IOSRenderer.js~IOSRenderer#_currentPage",
    "access": "private",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "src/native/IOSTransitions.js",
    "content": "/**\n * IOS Transtion Options\n * @ignore\n */\nmodule.exports = {\n  UIViewAnimationOptionLayoutSubviews: 1 << 0,\n  UIViewAnimationOptionAllowUserInteraction: 1 << 1,\n  UIViewAnimationOptionBeginFromCurrentState: 1 << 2,\n  UIViewAnimationOptionRepeat: 1 << 3,\n  UIViewAnimationOptionAutoreverse: 1 << 4, // Run the animation backwards and forwards (must be combined with the repeat option).\n  UIViewAnimationOptionOverrideInheritedDuration: 1 << 5, //Force the animation to use the original duration value specified when the animation was submitted.\n  UIViewAnimationOptionOverrideInheritedCurve: 1 << 6, //Force the animation to use the original curve value specified when the animation was submitted.\n  UIViewAnimationOptionAllowAnimatedContent: 1 << 7, //Animate the views by changing the property values dynamically and redrawing the view.\n  UIViewAnimationOptionShowHideTransitionViews: 1 << 8, // Hide or show views during a view transition.\n  UIViewAnimationOptionOverrideInheritedOptions: 1 << 9, // The option to not inherit the animation type or any options.\n  UIViewAnimationOptionCurveEaseInOut: 0 << 16,\n  UIViewAnimationOptionCurveEaseIn: 1 << 16,\n  UIViewAnimationOptionCurveEaseOut: 2 << 16,\n  UIViewAnimationOptionCurveLinear: 3 << 16,\n  UIViewAnimationOptionTransitionNone: 0 << 20,\n  UIViewAnimationOptionTransitionFlipFromLeft: 1 << 20,\n  UIViewAnimationOptionTransitionFlipFromRight: 2 << 20,\n  UIViewAnimationOptionTransitionCurlUp: 3 << 20,\n  UIViewAnimationOptionTransitionCurlDown: 4 << 20,\n  UIViewAnimationOptionTransitionCrossDissolve: 5 << 20,\n  UIViewAnimationOptionTransitionFlipFromTop: 6 << 20,\n  UIViewAnimationOptionTransitionFlipFromBottom: 7 << 20,\n  UIViewAnimationOptionPreferredFramesPerSecondDefault: 0 << 24,\n  UIViewAnimationOptionPreferredFramesPerSecond30: 7 << 24,\n  UIViewAnimationOptionPreferredFramesPerSecond60: 3 << 24\n};\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/IOSTransitions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "src/native/NativeModalRouter.js",
    "content": "\"use strict\";\n\nconst NativeRouterBase = require(\"./NativeRouterBase\");\nconst createRenderer = require(\"./createRenderer\");\nconst Page = require(\"sf-core/ui/page\");\n\n/**\n * It creates root {@link Page} and adds and removes child pages.\n * @class\n * @example\n * const {NativeRouter: Router, Route} = require('@smartface/router')\n * const Image = require('sf-core/ui/image');\n * const Color = require('sf-core/ui/color');\n *\n * var router = Router.of({\n *  path: \"/\",\n *  isRoot: true,\n *  to: '/page1',\n *  routes: [\n *    Route.of({\n *      path: \"/page1\",\n *      build((router, route) => {\n *        const Page1 = require('/pages/Page1');\n *          return new Page1(route.getState().routeData, router);\n *         })\n *      }),\n *      Route.of({\n *        path: \"/page2\",\n *        build((router, route) => {\n *          const Page2 = require('/pages/Page2');\n *          return new Page2(route.getState().routeData, router);\n *        });\n *      });\n *    ]\n * })\n *\n * @since 1.0.0\n */\nclass NativeModalRouter extends NativeRouterBase {\n  /**\n   * Create OS specific NativeRouter instance\n   * @static\n   * @param {RouterParams} options\n   * @returns {NativeRouter}\n   */\n  static of(options) {\n    options.renderer = createRenderer();\n    return new NativeModalRouter(options);\n  }\n\n  /**\n   * @constructor\n   * @param {RouterParams} param\n   */\n  constructor({\n    path = \"\",\n    build = null,\n    routes = [],\n    exact = false,\n    renderer = null,\n    to = null,\n    routerDidEnter,\n    routerDidExit,\n    routeShouldMatch\n  }) {\n    super({\n      path,\n      build,\n      routes,\n      exact,\n      isRoot: false,\n      to,\n      routerDidEnter,\n      routerDidExit,\n      routeShouldMatch\n    });\n\n    this._renderer = renderer;\n  }\n\n  /**\n   * @protected\n   * @param {NativeRouter[]|NativeStackRouter[]|BottomTabBarRouter[]} router\n   */\n  addChildRouter(router) {\n    this._renderer.show(router._renderer._rootController);\n  }\n\n  /**\n   * @override\n   */\n  routeWillEnter(route) {\n    this._renderer.show(route.getState().view);\n  }\n}\n\nmodule.exports = NativeModalRouter;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/NativeModalRouter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "NativeRouterBase",
    "memberof": "src/native/NativeModalRouter.js",
    "static": true,
    "longname": "src/native/NativeModalRouter.js~NativeRouterBase",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeModalRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "createRenderer",
    "memberof": "src/native/NativeModalRouter.js",
    "static": true,
    "longname": "src/native/NativeModalRouter.js~createRenderer",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeModalRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "Page",
    "memberof": "src/native/NativeModalRouter.js",
    "static": true,
    "longname": "src/native/NativeModalRouter.js~Page",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeModalRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "class",
    "name": "NativeModalRouter",
    "memberof": "src/native/NativeModalRouter.js",
    "static": true,
    "longname": "src/native/NativeModalRouter.js~NativeModalRouter",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeModalRouter.js",
    "importStyle": null,
    "description": "It creates root {@link Page} and adds and removes child pages.",
    "examples": [
      "const {NativeRouter: Router, Route} = require('@smartface/router')\nconst Image = require('sf-core/ui/image');\nconst Color = require('sf-core/ui/color');\n\nvar router = Router.of({\n path: \"/\",\n isRoot: true,\n to: '/page1',\n routes: [\n   Route.of({\n     path: \"/page1\",\n     build((router, route) => {\n       const Page1 = require('/pages/Page1');\n         return new Page1(route.getState().routeData, router);\n        })\n     }),\n     Route.of({\n       path: \"/page2\",\n       build((router, route) => {\n         const Page2 = require('/pages/Page2');\n         return new Page2(route.getState().routeData, router);\n       });\n     });\n   ]\n})"
    ],
    "lineNumber": 39,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "NativeRouterBase"
    ]
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "of",
    "memberof": "src/native/NativeModalRouter.js~NativeModalRouter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/native/NativeModalRouter.js~NativeModalRouter.of",
    "access": "public",
    "description": "Create OS specific NativeRouter instance",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{NativeRouter}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NativeRouter"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 161,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/native/NativeModalRouter.js~NativeModalRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeModalRouter.js~NativeModalRouter#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "param",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "_renderer",
    "memberof": "src/native/NativeModalRouter.js~NativeModalRouter",
    "static": false,
    "longname": "src/native/NativeModalRouter.js~NativeModalRouter#_renderer",
    "access": "private",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "addChildRouter",
    "memberof": "src/native/NativeModalRouter.js~NativeModalRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeModalRouter.js~NativeModalRouter#addChildRouter",
    "access": "protected",
    "description": "",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "NativeRouter[]",
          "NativeStackRouter[]",
          "BottomTabBarRouter[]"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "routeWillEnter",
    "memberof": "src/native/NativeModalRouter.js~NativeModalRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeModalRouter.js~NativeModalRouter#routeWillEnter",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "override": true,
    "params": [
      {
        "name": "route",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "src/native/NativeRouter.js",
    "content": "\"use strict\";\n\nconst NativeRouterBase = require(\"./NativeRouterBase\");\nconst createRenderer = require(\"./createRenderer\");\nconst Page = require(\"sf-core/ui/page\");\n\n/**\n * It creates root {@link Page} and adds and removes child pages.\n * @class\n * @example\n * const {NativeRouter: Router, Route} = require('@smartface/router')\n * const Image = require('sf-core/ui/image');\n * const Color = require('sf-core/ui/color');\n *\n * var router = Router.of({\n *  path: \"/\",\n *  isRoot: true,\n *  to: '/page1',\n *  routes: [\n *    Route.of({\n *      path: \"/page1\",\n *      build((router, route) => {\n *        const Page1 = require('/pages/Page1');\n *          return new Page1(route.getState().routeData, router);\n *         })\n *      }),\n *      Route.of({\n *        path: \"/page2\",\n *        build((router, route) => {\n *          const Page2 = require('/pages/Page2');\n *          return new Page2(route.getState().routeData, router);\n *        });\n *      });\n *    ]\n * })\n *\n * @since 1.0.0\n */\nclass NativeRouter extends NativeRouterBase {\n  /**\n   * Create OS specific NativeRouter instance\n   * @static\n   * @param {RouterParams} options\n   * @returns {NativeRouter}\n   */\n  static of(options) {\n    options.renderer = createRenderer();\n    return new NativeRouter(options);\n  }\n\n  /**\n   * @constructor\n   * @param {RouterParams} param\n   */\n  constructor({\n    path = \"\",\n    build = null,\n    routes = [],\n    exact = false,\n    renderer = null,\n    isRoot = false,\n    to = null,\n    routerDidEnter,\n    routerDidExit,\n    routeShouldMatch\n  }) {\n    super({\n      path,\n      build,\n      routes,\n      exact,\n      isRoot,\n      to,\n      routerDidEnter,\n      routerDidExit,\n      routeShouldMatch\n    });\n\n    this._renderer = renderer;\n    if (isRoot) {\n      this._renderer.setRootController(\n        new Page({ orientation: Page.Orientation.AUTO })\n      );\n      const Renderer = require(\"./Renderer\");\n      Renderer.setasRoot(this._renderer._rootController);\n    }\n  }\n\n  /**\n   * @protected\n   * @param {NativeRouter[]|NativeStackRouter[]|BottomTabBarRouter[]} router\n   */\n  addChildRouter(router) {\n    const Renderer = require(\"./Renderer\");\n    // this._renderer.show(router._renderer._rootController);\n    Renderer.setasRoot(router._renderer._rootController);\n  }\n\n  /**\n   * @override\n   */\n  routeWillEnter(route) {\n    const Renderer = require(\"./Renderer\");\n    // this._renderer.show(router._renderer._rootController);\n    if(this._isRoot)\n      Renderer.setasRoot(route.getState().view);\n    else\n      this._renderer.show(route.getState().view);\n  }\n}\n\nmodule.exports = NativeRouter;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/NativeRouter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "variable",
    "name": "NativeRouterBase",
    "memberof": "src/native/NativeRouter.js",
    "static": true,
    "longname": "src/native/NativeRouter.js~NativeRouterBase",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "createRenderer",
    "memberof": "src/native/NativeRouter.js",
    "static": true,
    "longname": "src/native/NativeRouter.js~createRenderer",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "Page",
    "memberof": "src/native/NativeRouter.js",
    "static": true,
    "longname": "src/native/NativeRouter.js~Page",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "class",
    "name": "NativeRouter",
    "memberof": "src/native/NativeRouter.js",
    "static": true,
    "longname": "src/native/NativeRouter.js~NativeRouter",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeRouter.js",
    "importStyle": null,
    "description": "It creates root {@link Page} and adds and removes child pages.",
    "examples": [
      "const {NativeRouter: Router, Route} = require('@smartface/router')\nconst Image = require('sf-core/ui/image');\nconst Color = require('sf-core/ui/color');\n\nvar router = Router.of({\n path: \"/\",\n isRoot: true,\n to: '/page1',\n routes: [\n   Route.of({\n     path: \"/page1\",\n     build((router, route) => {\n       const Page1 = require('/pages/Page1');\n         return new Page1(route.getState().routeData, router);\n        })\n     }),\n     Route.of({\n       path: \"/page2\",\n       build((router, route) => {\n         const Page2 = require('/pages/Page2');\n         return new Page2(route.getState().routeData, router);\n       });\n     });\n   ]\n})"
    ],
    "lineNumber": 39,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "NativeRouterBase"
    ]
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "of",
    "memberof": "src/native/NativeRouter.js~NativeRouter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/native/NativeRouter.js~NativeRouter.of",
    "access": "public",
    "description": "Create OS specific NativeRouter instance",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{NativeRouter}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NativeRouter"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 171,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/native/NativeRouter.js~NativeRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeRouter.js~NativeRouter#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "param",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "_renderer",
    "memberof": "src/native/NativeRouter.js~NativeRouter",
    "static": false,
    "longname": "src/native/NativeRouter.js~NativeRouter#_renderer",
    "access": "private",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "addChildRouter",
    "memberof": "src/native/NativeRouter.js~NativeRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeRouter.js~NativeRouter#addChildRouter",
    "access": "protected",
    "description": "",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "NativeRouter[]",
          "NativeStackRouter[]",
          "BottomTabBarRouter[]"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "routeWillEnter",
    "memberof": "src/native/NativeRouter.js~NativeRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeRouter.js~NativeRouter#routeWillEnter",
    "access": "public",
    "description": "",
    "lineNumber": 102,
    "override": true,
    "params": [
      {
        "name": "route",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "file",
    "name": "src/native/NativeRouterBase.js",
    "content": "\"use strict\";\n\nconst Router = require(\"../router/Router\");\n\n/**\n * Native router base\n * @class\n */\nclass NativeRouterBase extends Router {\n  setHeaderbarProps(props) {\n    this._renderer._rootController &&\n      this._renderer._rootController.headerBar &&\n      (this._renderer._rootController.headerBar = props);\n  }\n}\n\nmodule.exports = NativeRouterBase;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/NativeRouterBase.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "name": "Router",
    "memberof": "src/native/NativeRouterBase.js",
    "static": true,
    "longname": "src/native/NativeRouterBase.js~Router",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeRouterBase.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "class",
    "name": "NativeRouterBase",
    "memberof": "src/native/NativeRouterBase.js",
    "static": true,
    "longname": "src/native/NativeRouterBase.js~NativeRouterBase",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeRouterBase.js",
    "importStyle": null,
    "description": "Native router base",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "Router"
    ]
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "setHeaderbarProps",
    "memberof": "src/native/NativeRouterBase.js~NativeRouterBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeRouterBase.js~NativeRouterBase#setHeaderbarProps",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 179,
    "kind": "file",
    "name": "src/native/NativeStackRouter.js",
    "content": "\"use strict\";\n\n/**\n * @typedef {RouterParams} NativeStackRouterParams\n * @property {Array<BottomTabBarItem>} items BottomTabBarItem collection\n * @property {function():HeaderBarParams} headerBarParams See {@link NavigationController}\n */\n\n/**\n * @typedef {object} HeaderBarParams For more info {@link NavigationController}\n * @property {{ transulent: boolean,\n *              alpha: number,\n *              backIndicatorImage: Image,\n *              backIndicatorTransitionMaskImage: Image,\n *              prefersLargeTitles: boolean}} ios\n * @property {boolean} borderVisibility\n * @property {Color} titleColor\n * @property {boolean} transparent\n * @property {boolean} visible\n * @property {Color} backgroundColor\n */\n\n/**\n * @typedef NavigationControllerTransformEvent\n * @property {Page} frompage\n * @property {Page} topage\n * @property {{operation: number}} operation\n */\n\nconst NativeRouterBase = require(\"./NativeRouterBase\");\nconst Router = require(\"../router/Router\");\nconst NavigationController = require(\"sf-core/ui/navigationcontroller\");\nconst createRenderer = require(\"./createRenderer\");\n\n/**\n * Creates {@link NavigationController} and manages its behavours and routes.\n *\n * @class\n * @extends {Router}\n * @example\n * const {NativeStackRouter, Route} = require('@smartface/router');\n * const Image = require('sf-core/ui/image');\n * const Color = require('sf-core/ui/color');\n *\n * var router = Router.of({\n *  path: \"/\",\n *\n *  routes: [\n *    NativeStackRouter.of(\n *      path: '/pages',\n *      headerBarParams: () => ({\n *        ios: {\n *          translucent: true,\n *          alpha: 1\n *        },\n *        backgroundColor: Color.BLUE,\n *        visible: true\n *      }),\n *      routes: [\n *        Route.of({\n *          path: \"/pages/page1\",\n *          build((router, route) => {\n *            const Page1 = require('/pages/Page1');\n *            return new Page1(state.data, router);\n *          })\n *        }),\n *        Route.of({\n *          path: \"/pages/page2\",\n *          build((router, route) => {\n *            const Page2 = require('/pages/Page2');\n *            return new Page2(state.data, router);\n *          });\n *        });\n *      ]\n *    )]\n * });\n *\n * @example\n * const extend = require(\"js-base/core/extend\");\n *  const System = require(\"sf-core/device/system\");\n *  const Application = require(\"sf-core/application\");\n *  const AlertView = require(\"sf-core/ui/alertview\");\n *  const {NativeStackRouter} = require('@smartface/router');\n *\n *  // Get generated UI code\n *  const Page1Design = require(\"ui/ui_page1\");\n *\n *  const Page1 = extend(Page1Design)(\n *   // Constructor\n *   function(_super, data, router) {\n *       // Initalizes super class for this page scope\n *       _super(this);\n *       this._router = router;\n *       if(router instanceof NativeStackRouter)\n *         router.setHeaderBarParams({visible: false});\n *\n *       ...\n *   });\n *\n *\n * @since 1.0.0\n */\nclass NativeStackRouter extends NativeRouterBase {\n  /**\n   * Builds OS specific NaitveRouter\n   *\n   * @static\n   * @param {NativeStackRouterParams} params\n   */\n  static of(params) {\n    params.renderer = createRenderer();\n    return new NativeStackRouter(params);\n  }\n\n  /**\n   * @constructor\n   * @param {NativeStackRouterParams} param0\n   */\n  constructor({\n    path = \"\",\n    build = null,\n    routes = [],\n    exact = false,\n    renderer = null,\n    to = null,\n    isRoot = false,\n    headerBarParams = () => {},\n    routerDidEnter,\n    routerDidExit,\n    routeShouldMatch\n  }) {\n    super({\n      path,\n      build,\n      routes,\n      exact,\n      to,\n      isRoot,\n      routerDidEnter,\n      routerDidExit,\n      routeShouldMatch\n    });\n    this._fromRouter = true;\n    this._renderer = renderer;\n    this._renderer.setRootController(new NavigationController());\n    this.addNavigatorChangeListener();\n    this.build = () => this._renderer._rootController;\n    // this._renderer._rootController.onLoad = () => {\n    this._renderer._rootController.headerBar = headerBarParams();\n    // };\n  }\n\n  /**\n   * Applies new params to the headerBar\n   *\n   * @param {HeaderBarParams} params\n   */\n  setHeaderBarParams(params) {\n    this._renderer._rootController.headerBar = params;\n  }\n\n  /**\n   * Returns headerBar instance\n   *\n   * @return {object}\n   */\n  get headerBar() {\n    return this._renderer._rootController.headerBar;\n  }\n\n  routeShouldMatch(prevState, nextState) {\n    if (this.isUrlCurrent(nextState.match.url, nextState.action)) return false;\n    return super.routeShouldMatch(prevState, nextState);\n  }\n\n  /**\n   * @private\n   * Add new listener to listen NavigationController transitions.\n   */\n  addNavigatorChangeListener() {\n    this._unlistener = this._renderer.onNavigationControllerTransition(\n      action => {\n        // if user presses backbutton or uses gesture to back\n        if (action.operation === NavigationController.OperationType.POP) {\n          // set Router to skip next history change\n          // this._fromRouter = false;\n          try {\n            console.log(JSON.stringify(this.getHistoryasArray()));\n            this._historyController.preventDefault();\n            this._historyController.goBack();\n            console.log(JSON.stringify(this.getHistoryasArray()));\n            this._fromRouter = false;\n            this.dispatch(\n              this._historyController.history.location,\n              \"POP\",\n              this\n            );\n            this._fromRouter = true;\n          } catch (e) {\n            throw e;\n          } finally {\n            // this._fromRouter = true;\n          }\n          // and history goes back.\n          // this.goBack();\n        }\n      }\n    );\n  }\n\n  /**\n   * @override\n   *\n   */\n  dispose() {\n    super.dispose();\n    this._unlistener();\n  }\n\n  push(path, routeData = {}) {\n    // console.log(`nav push ${path} ${this._currentUrl}`);\n    if (path === this._currentUrl) {\n      Object.assign(\n        this._historyController.history.location.state.routeData,\n        routeData\n      );\n      this.dispatch(this._historyController.history.location, \"PUSH\", this);\n\n      return this;\n    }\n\n    return super.push(path, routeData);\n  }\n\n  routeWillEnter(route) {\n    const state = route.getState();\n    switch (state.action) {\n      case \"REPLACE\":\n      case \"PUSH\":\n        console.log(`push ${this._currentUrl} - ${route.getUrlPath()}`);\n        if (this._fromRouter && this._currentUrl !== route.getUrlPath())\n          this._renderer.pushChild(state.view);\n        break;\n      case \"POP\":\n        if (this._fromRouter && Router.currentRouter === this)\n          this._renderer.popChild();\n        break;\n    }\n  }\n\n  /**\n   * Event handler when a router exits from active state\n   *\n   * @override\n   * @protected\n   * @event\n   * @param {string} action\n   */\n  onRouterExit(action) {\n    super.onRouterExit(action);\n    // if (action === \"POP\")\n    // this._renderer.setRootController(new NavigationController());\n  }\n}\n\nmodule.exports = NativeStackRouter;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/NativeStackRouter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 180,
    "kind": "typedef",
    "name": "NativeStackRouterParams",
    "memberof": "src/native/NativeStackRouter.js",
    "static": true,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouterParams",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<BottomTabBarItem>"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "BottomTabBarItem collection"
      },
      {
        "nullable": null,
        "types": [
          "function():HeaderBarParams"
        ],
        "spread": false,
        "optional": false,
        "name": "headerBarParams",
        "description": "See {@link NavigationController}"
      }
    ],
    "type": {
      "types": [
        "RouterParams"
      ],
      "optional": false,
      "name": "NativeStackRouterParams"
    }
  },
  {
    "__docId__": 181,
    "kind": "typedef",
    "name": "HeaderBarParams",
    "memberof": "src/native/NativeStackRouter.js",
    "static": true,
    "longname": "src/native/NativeStackRouter.js~HeaderBarParams",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "{ transulent: boolean,\n             alpha: number,\n             backIndicatorImage: Image,\n             backIndicatorTransitionMaskImage: Image,\n             prefersLargeTitles: boolean}"
        ],
        "spread": false,
        "optional": false,
        "name": "ios",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "borderVisibility",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "titleColor",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "transparent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "backgroundColor",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "HeaderBarParams"
    }
  },
  {
    "__docId__": 182,
    "kind": "typedef",
    "name": "NavigationControllerTransformEvent",
    "memberof": "src/native/NativeStackRouter.js",
    "static": true,
    "longname": "src/native/NativeStackRouter.js~NavigationControllerTransformEvent",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Page"
        ],
        "spread": false,
        "optional": false,
        "name": "frompage",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Page"
        ],
        "spread": false,
        "optional": false,
        "name": "topage",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{operation: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "operation",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "NavigationControllerTransformEvent"
    }
  },
  {
    "__docId__": 183,
    "kind": "variable",
    "name": "Router",
    "memberof": "src/native/NativeStackRouter.js",
    "static": true,
    "longname": "src/native/NativeStackRouter.js~Router",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeStackRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "NavigationController",
    "memberof": "src/native/NativeStackRouter.js",
    "static": true,
    "longname": "src/native/NativeStackRouter.js~NavigationController",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeStackRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "variable",
    "name": "createRenderer",
    "memberof": "src/native/NativeStackRouter.js",
    "static": true,
    "longname": "src/native/NativeStackRouter.js~createRenderer",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeStackRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "class",
    "name": "NativeStackRouter",
    "memberof": "src/native/NativeStackRouter.js",
    "static": true,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/NativeStackRouter.js",
    "importStyle": null,
    "description": "Creates {@link NavigationController} and manages its behavours and routes.",
    "examples": [
      "const {NativeStackRouter, Route} = require('@smartface/router');\nconst Image = require('sf-core/ui/image');\nconst Color = require('sf-core/ui/color');\n\nvar router = Router.of({\n path: \"/\",\n\n routes: [\n   NativeStackRouter.of(\n     path: '/pages',\n     headerBarParams: () => ({\n       ios: {\n         translucent: true,\n         alpha: 1\n       },\n       backgroundColor: Color.BLUE,\n       visible: true\n     }),\n     routes: [\n       Route.of({\n         path: \"/pages/page1\",\n         build((router, route) => {\n           const Page1 = require('/pages/Page1');\n           return new Page1(state.data, router);\n         })\n       }),\n       Route.of({\n         path: \"/pages/page2\",\n         build((router, route) => {\n           const Page2 = require('/pages/Page2');\n           return new Page2(state.data, router);\n         });\n       });\n     ]\n   )]\n});",
      "const extend = require(\"js-base/core/extend\");\n const System = require(\"sf-core/device/system\");\n const Application = require(\"sf-core/application\");\n const AlertView = require(\"sf-core/ui/alertview\");\n const {NativeStackRouter} = require('@smartface/router');\n\n // Get generated UI code\n const Page1Design = require(\"ui/ui_page1\");\n\n const Page1 = extend(Page1Design)(\n  // Constructor\n  function(_super, data, router) {\n      // Initalizes super class for this page scope\n      _super(this);\n      this._router = router;\n      if(router instanceof NativeStackRouter)\n        router.setHeaderBarParams({visible: false});\n\n      ...\n  });"
    ],
    "lineNumber": 103,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "Router"
    ]
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "of",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter.of",
    "access": "public",
    "description": "Builds OS specific NaitveRouter",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "NativeStackRouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "NativeStackRouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "param0",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "_fromRouter",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#_fromRouter",
    "access": "private",
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "_renderer",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#_renderer",
    "access": "private",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "build",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#build",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "setHeaderBarParams",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#setHeaderBarParams",
    "access": "public",
    "description": "Applies new params to the headerBar",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "HeaderBarParams"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "get",
    "name": "headerBar",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#headerBar",
    "access": "public",
    "description": "Returns headerBar instance",
    "lineNumber": 167,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "routeShouldMatch",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#routeShouldMatch",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [
      {
        "name": "prevState",
        "types": [
          "*"
        ]
      },
      {
        "name": "nextState",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "addNavigatorChangeListener",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#addNavigatorChangeListener",
    "access": "private",
    "description": "",
    "lineNumber": 180,
    "params": [],
    "return": null
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "_unlistener",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#_unlistener",
    "access": "private",
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#dispose",
    "access": "public",
    "description": "",
    "lineNumber": 215,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "push",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#push",
    "access": "public",
    "description": null,
    "lineNumber": 220,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "routeData",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "routeWillEnter",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#routeWillEnter",
    "access": "public",
    "description": null,
    "lineNumber": 235,
    "undocument": true,
    "params": [
      {
        "name": "route",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "onRouterExit",
    "memberof": "src/native/NativeStackRouter.js~NativeStackRouter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/NativeStackRouter.js~NativeStackRouter#onRouterExit",
    "access": "protected",
    "description": "Event handler when a router exits from active state",
    "lineNumber": 259,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 203,
    "kind": "file",
    "name": "src/native/Renderer.js",
    "content": "\"use strict\";\n\nconst Page = require(\"sf-core/ui/page\");\nconst Application = require(\"sf-core/application\");\n\n/**\n * Abstract Renderer Strategy\n * It encapsulates displaying strategies for child views.\n *\n * @access package\n * @abstract\n */\nclass Renderer {\n  /**\n   * Helper method sets statically rootController of the Application by DeviceOS\n   *\n   * @static\n   * @param {BottomTabBarController|Page|NavigationController} rootController\n   */\n  static setasRoot(rootController) {\n    /*if (Device.deviceOS === \"iOS\") {\n      var sfWindow = SF.requireClass(\"UIApplication\").sharedApplication()\n        .keyWindow;\n      sfWindow.rootViewController = rootController.nativeObject;\n\n      rootController.nativeObject.view.addFrameObserver();\n      rootController.nativeObject.view.frameObserveHandler = e => {\n        for (var child in rootController.nativeObject.childViewControllers) {\n          rootController.nativeObject.childViewControllers[child].view.frame = {\n            x: 0,\n            y: 0,\n            width: e.frame.width,\n            height: e.frame.height\n          };\n\n          if (\n            rootController.nativeObject.childViewControllers[child].view.yoga\n              .isEnabled\n          ) {\n            rootController.nativeObject.childViewControllers[\n              child\n            ].view.yoga.applyLayoutPreservingOrigin(true);\n          }\n        }\n      };\n      // currentChild = controller;\n    } else {\n      Application.setRootController(rootController);\n    }*/\n    Application.setRootController({\n      controller: rootController,\n      animated: true\n    });\n  }\n\n  makeRootVisible() {\n    var sfWindow = SF.requireClass(\"UIApplication\").sharedApplication()\n      .keyWindow;\n    sfWindow.makeKeyAndVisible();\n  }\n\n  /**\n   * Only use if rootpage is Page instancea\n   *\n   * @protected\n   * @param {Page} fromPage\n   * @param {Page} toPage\n   * @param {number} [duration=0] duration\n   * @param {number} [options=0] options\n   */\n  showWithTransition(fromPage, toPage, duration = 0, options = 0) {\n    throw new Error(\"onNavigatorChange method must be overridden\");\n  }\n\n  /**\n   * Template method sets specified controller as root controller\n   * @param {BottomTabBarController|Page|NavigationController} controller\n   */\n  setRootController(controller) {\n    this._rootController = controller;\n  }\n\n  /**\n   * NavigationController child page is changed handler\n   * Only use if rootpage is NavigationController.\n   * Must be Implemented\n   *\n   * @param {function(e:NavigationControllerTransformEvent)} fn\n   */\n  onNavigationControllerTransition(fn) {\n    throw new Error(\"onNavigatorChange method must be overridden\");\n  }\n\n  /**\n   * Set TabBarItems to BottomTabBarController\n   *\n   * @param {Array<TabBarItem>} items\n   */\n  setTabBarItems(items) {\n    this._rootController.tabBar.items = items;\n  }\n\n  /**\n   * Set NavigationController selected index\n   *\n   * @param {nummer} index\n   */\n  setSelectedIndex(index) {\n    this._rootController.selectedIndex = index;\n    // this._rootController.hasOwnProperty('selectedIndex') ? (this._rootController.selectedIndex = index) : (this.setIndex(index));\n  }\n\n  /**\n   * Set NavigationController child controllers.\n   * Must be implemented.\n   *\n   * @params {Array<NavigationController>} children\n   */\n  setChildControllers(children) {\n    throw new Error(\"addChildViewControllers method must be overridden\");\n  }\n\n  /**\n   * Remove child from root page\n   * Must be implemented.\n   *\n   * @param {Page} page\n   */\n  removeChild(page) {\n    throw new Error(\"removeChild must be overridden\");\n  }\n\n  /**\n   * Add child from root page\n   * Must be implemented.\n   *\n   * @param {Page} page\n   */\n  addChild(page) {\n    throw new Error(\"addChild must be overridden\");\n  }\n\n  /**\n   * Push child from root NavigationController.\n   * Must be implemented.\n   *\n   * @param {Page} page\n   * @param {boolean} [animated=true] animmated\n   */\n  pushChild(page, animated = true) {\n    throw new Error(\"pushChild must be overridden\");\n  }\n\n  /**\n   * Pop child from root NavigationController.\n   * Must be implemented.\n   *\n   * @param {boolean} [animated=true] animmated\n   */\n  popChild(animated = true) {\n    throw new Error(\"popChild must be overridden\");\n  }\n\n  /**\n   * Displays specified page\n   * Only use if root conttroller is a Page instance\n   *\n   * @param {Page} page\n   */\n  show(page) {\n    throw new Error(\"popChild must be overridden\");\n  }\n}\n\nmodule.exports = Renderer;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/Renderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 204,
    "kind": "variable",
    "name": "Page",
    "memberof": "src/native/Renderer.js",
    "static": true,
    "longname": "src/native/Renderer.js~Page",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/Renderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 205,
    "kind": "variable",
    "name": "Application",
    "memberof": "src/native/Renderer.js",
    "static": true,
    "longname": "src/native/Renderer.js~Application",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/Renderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 206,
    "kind": "class",
    "name": "Renderer",
    "memberof": "src/native/Renderer.js",
    "static": true,
    "longname": "src/native/Renderer.js~Renderer",
    "access": "package",
    "export": false,
    "importPath": "@smartface/router/src/native/Renderer.js",
    "importStyle": null,
    "description": "Abstract Renderer Strategy\nIt encapsulates displaying strategies for child views.",
    "lineNumber": 13,
    "abstract": true,
    "interface": false
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "setasRoot",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/native/Renderer.js~Renderer.setasRoot",
    "access": "public",
    "description": "Helper method sets statically rootController of the Application by DeviceOS",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "BottomTabBarController",
          "Page",
          "NavigationController"
        ],
        "spread": false,
        "optional": false,
        "name": "rootController",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "makeRootVisible",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#makeRootVisible",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "showWithTransition",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#showWithTransition",
    "access": "protected",
    "description": "Only use if rootpage is Page instancea",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "Page"
        ],
        "spread": false,
        "optional": false,
        "name": "fromPage",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Page"
        ],
        "spread": false,
        "optional": false,
        "name": "toPage",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "duration",
        "description": "duration"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "options",
        "description": "options"
      }
    ],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "setRootController",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#setRootController",
    "access": "public",
    "description": "Template method sets specified controller as root controller",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "BottomTabBarController",
          "Page",
          "NavigationController"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "_rootController",
    "memberof": "src/native/Renderer.js~Renderer",
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#_rootController",
    "access": "private",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "onNavigationControllerTransition",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#onNavigationControllerTransition",
    "access": "public",
    "description": "NavigationController child page is changed handler\nOnly use if rootpage is NavigationController.\nMust be Implemented",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(e:NavigationControllerTransformEvent)"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "setTabBarItems",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#setTabBarItems",
    "access": "public",
    "description": "Set TabBarItems to BottomTabBarController",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<TabBarItem>"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "setSelectedIndex",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#setSelectedIndex",
    "access": "public",
    "description": "Set NavigationController selected index",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "nummer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "setChildControllers",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#setChildControllers",
    "access": "public",
    "description": "Set NavigationController child controllers.\nMust be implemented.",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{Array<NavigationController>} children"
      }
    ],
    "params": [
      {
        "name": "children",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "removeChild",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#removeChild",
    "access": "public",
    "description": "Remove child from root page\nMust be implemented.",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "Page"
        ],
        "spread": false,
        "optional": false,
        "name": "page",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "addChild",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#addChild",
    "access": "public",
    "description": "Add child from root page\nMust be implemented.",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Page"
        ],
        "spread": false,
        "optional": false,
        "name": "page",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "pushChild",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#pushChild",
    "access": "public",
    "description": "Push child from root NavigationController.\nMust be implemented.",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "Page"
        ],
        "spread": false,
        "optional": false,
        "name": "page",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "animated",
        "description": "animmated"
      }
    ],
    "return": null
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "popChild",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#popChild",
    "access": "public",
    "description": "Pop child from root NavigationController.\nMust be implemented.",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "animated",
        "description": "animmated"
      }
    ],
    "return": null
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "show",
    "memberof": "src/native/Renderer.js~Renderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/Renderer.js~Renderer#show",
    "access": "public",
    "description": "Displays specified page\nOnly use if root conttroller is a Page instance",
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "Page"
        ],
        "spread": false,
        "optional": false,
        "name": "page",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "src/native/createRenderer.js",
    "content": "const DeviceOS = require(\"../common/DeviceOS\");\n\nmodule.exports = function createRenderer(root, params = {}) {\n  let Renderer;\n  switch (Device.deviceOS) {\n    case DeviceOS.ios:\n      Renderer = require(\"./IOSRenderer\");\n      break;\n    case DeviceOS.android:\n      Renderer = require(\"./AndroidRenderer\");\n      break;\n    default:\n      throw new TypeError(Device.deviceOS + \" Invalid OS definition.\");\n  }\n\n  return new Renderer(root, params);\n};\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/createRenderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "variable",
    "name": "DeviceOS",
    "memberof": "src/native/createRenderer.js",
    "static": true,
    "longname": "src/native/createRenderer.js~DeviceOS",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/createRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "exports",
    "memberof": "src/native/createRenderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/native/createRenderer.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/createRenderer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "root",
        "types": [
          "*"
        ]
      },
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "file",
    "name": "src/native/iOSAnimator.js",
    "content": "const TransitionOptions = require(\"./IOSTransitions\");\n\n/**\n * @ignore\n *\n */\nclass iOSAnimator {\n  constructor(containerView) {\n    this._containerView = containerView;\n    this._options = 0 << 20;\n  }\n\n  onAnimate(fn) {\n    this._onAnimate = fn;\n    return this;\n  }\n\n  onFinish(fn) {\n    this._onFinish = fn;\n    return this;\n  }\n\n  start(from, to, duration = 0, params = {}) {\n    // options && (this._options = this._options | options);\n    // this.getTime();\n    this._containerView.nativeObject.transitionFromToDurationOptionsAnimationsCompletion(\n      from.nativeObject,\n      to.nativeObject,\n      duration,\n      TransitionOptions.UIViewAnimationOptionTransitionNone,\n      () => {\n        this._onAnimate &&\n          this._onAnimate(\n            this._containerView,\n            from,\n            to,\n            duration,\n            this._options,\n            params\n          );\n      },\n      finished => {\n        this._onFinish &&\n          this._onFinish(\n            finished,\n            this._containerView,\n            from,\n            to,\n            duration,\n            this._options,\n            params\n          );\n        this._once && this.dispose();\n      }\n    );\n  }\n\n  dispose() {\n    this._containerView = null;\n    this._onFinish = null;\n    this._onAnimate = null;\n    this._easingFn = null;\n  }\n\n  once(val) {\n    this._once = val;\n    return this;\n  }\n}\n\nmodule.exports = iOSAnimator;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/native/iOSAnimator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "variable",
    "name": "TransitionOptions",
    "memberof": "src/native/iOSAnimator.js",
    "static": true,
    "longname": "src/native/iOSAnimator.js~TransitionOptions",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/iOSAnimator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 226,
    "kind": "class",
    "name": "iOSAnimator",
    "memberof": "src/native/iOSAnimator.js",
    "static": true,
    "longname": "src/native/iOSAnimator.js~iOSAnimator",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/native/iOSAnimator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 227,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "_containerView",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#_containerView",
    "access": "private",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "member",
    "name": "_options",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#_options",
    "access": "private",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "onAnimate",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#onAnimate",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 231,
    "kind": "member",
    "name": "_onAnimate",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#_onAnimate",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "onFinish",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#onFinish",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "_onFinish",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#_onFinish",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "start",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#start",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      },
      {
        "name": "duration",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "_once",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#_once",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "_easingFn",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#_easingFn",
    "access": "private",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "once",
    "memberof": "src/native/iOSAnimator.js~iOSAnimator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/native/iOSAnimator.js~iOSAnimator#once",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 245,
    "kind": "file",
    "name": "src/router/Route.js",
    "content": "\"use strict\";\n\n/**\n * @typedef {object} RouteMatch Object seperately keeps parsed and matched data of the request for every route\n * @property {boolean} isExact if Requested path is an exact match or not.\n * @property {Object} params Request params like id or name is represented by '/path/:id' or '/path2/:name'\n * @property {string} path Matched route's path\n * @property {string} url Requested route path\n */\n\n/**\n * @typedef {object} RouteLocation History entry of a request\n * @property {!string} pathname Requested url\n * @property {?string} search Url's search data\n * @property {?string} hash Url's hash data\n * @property {?RouteState} state Route state\n * @property {!string} key Unique key\n */\n\n/**\n * @typedef {object} RouteParams\n * @property {!string} path Route Path definition\n * @property {?Array<Route>} [=[]] routes Route children\n * @property {?boolean} [=false] exact Points that a route match must be exact or not\n * @property {?function(route: Route, nextState: RouteState)} routeShouldMatch Handles if route is mathed as request url\n * @property {?function(Router: Router, route: Route)} routeDidEnter Handles if route is displayed\n * @property {?function(Router: Router, route: Route)} routeDidExit Handles if route is removed\n */\n\n/**\n * @typedef {object} RouteState\n * @property {?object} [={}] routeData Requested data by user\n * @property {!string} action Request action 'PUSH', 'POP' or 'REPLACE'\n * @property {!RouteMatch} match Request's match result\n * @property {!object} view Keeps requested route's view\n * @property {?object} [={}] routingState Keeps user data when route runs\n */\n\nconst matchPath = require(\"../common/matchPath\").matchPath;\nconst mapComposer = require(\"../utils/map\");\n\n/**\n * Route's path ValueObject\n * For internal use\n * @access private\n * @class\n * @since 1.0.0\n */\nclass RoutePath {\n  /**\n   * Factory method to create a new instance\n   *\n   * @param {string} path\n   * @since 1.0.0\n   */\n  static of(path) {\n    return new RoutePath(path);\n  }\n\n  /**\n   * @constructor\n   * @param {string} path\n   * @since 1.0.0\n   */\n  constructor(path) {\n    this._path = path;\n  }\n\n  /**\n   * Returns route path\n   * @return {string}\n   * @since 1.0.0\n   */\n  getPath() {\n    return this._path;\n  }\n\n  /**\n   * Returns route is root or not.\n   *\n   * @returns {boolean}\n   * @since 1.0.0\n   */\n  isRoot() {\n    return this._path === \"/\";\n  }\n\n  /**\n   * Return quick representaion of the route-path\n   *\n   * @since 1.0.0\n   * @returns {{path: string, isRoot: boolean}}\n   */\n  toObject() {\n    return {\n      path: this._path,\n      isRoot: this.isRoot\n    };\n  }\n\n  /**\n   * @since 1.0.0\n   * @returns {RoutePath}\n   */\n  clone() {\n    return new RoutePath(this._path);\n  }\n\n  /**\n   * Return path is empty or not\n   *\n   * @since 1.0.0\n   * @return {boelean}\n   */\n  hasPath() {\n    return this._path !== null || this._path !== undefined || this._path !== \"\";\n  }\n}\n\n/**\n * Route implementation\n *\n * @since 1.0.0\n * @class\n */\nclass Route {\n  /**\n   * Static helper method to create a new instance of Route\n   *\n   * @since 1.0.0\n   * @static\n   * @param {RouteParams} params\n   * @return {Route}\n   */\n  static of(params = {}) {\n    return new Route(params);\n  }\n  /**\n   * @constructor\n   * @param {RouteParams} param\n   */\n  constructor({\n    path = null,\n    to = null,\n    routes = [],\n    build = null,\n    exact = false,\n    sensitive = true,\n    strict = true,\n    routeShouldMatch = null,\n    routeDidEnter,\n    routeDidExit\n  }) {\n    this._options = {\n      exact,\n      path,\n      sensitive,\n      strict\n    };\n    this._exact = exact;\n    this._strict = false;\n    this._build = build;\n    this._path = path instanceof RoutePath ? path : new RoutePath(path);\n    this._routes = routes;\n    this.map = mapComposer.call(this, this._routes);\n    this._to = to;\n    this._routeShouldMatch = routeShouldMatch;\n    this._routeDidEnter = routeDidEnter;\n    this._routeDidExit = routeDidExit;\n    this._state = Object.seal({\n      match: {},\n      routeData: {},\n      view: null,\n      routingState: {},\n      action: null\n    });\n  }\n\n  /**\n   * Merges specified state to current route state\n   *\n   * @since 1.0.0\n   * @param {object} state\n   */\n  setState(state) {\n    this._state = Object.assign(this._state, state);\n  }\n\n  /**\n   * Returns Route's current state\n   *\n   * @since 1.0.0\n   * @return {RouteState}\n   */\n  getState() {\n    return this._state;\n  }\n\n  /**\n   * Simple Object representation of the route\n   *\n   * @since 1.0.0\n   * @return {{path: string, routes: Array<object>}}\n   */\n  toObject() {\n    return {\n      path: this._path.getPath(),\n      routes: this._routes.map(route => route.toObject())\n    };\n  }\n\n  /**\n   * String representation of the route\n   *\n   * @since 1.0.0\n   * @return {string}\n   */\n  toString() {\n    return `[object ${this.constructor.name}, path: ${this.getUrlPath()}]`;\n  }\n\n  /**\n   * Helper method to return excat path of the component\n   *\n   * @since 1.0.0\n   * @return {string}\n   */\n  get routePath() {\n    return this.getRedirectto() || this.getUrlPath();\n  }\n\n  /**\n   * Returns redirection path\n   *\n   * @since 1.0.0\n   * @return {string}\n   */\n  getRedirectto() {\n    return this._to;\n  }\n\n  /**\n   * Builds a route's view.\n   * This method is called whenever router is routing into that path.\n   * There are some exceptions:\n   * - going into a tab, which the tab is created before\n   * - for iOS, goingBack via gesture or headerBar back\n   *\n   * @since 1.0.0\n   * @param {Router} router - Not the root router, the router which the route belongs to.\n   * @return {Page} view = null - If the route has been built once, the previous view (page) is given. Otherwise it is null. If view is not null, returning the view back makes it singleton.\n   */\n  build(router) {\n    return this._build ? this._build(router, this) : null;\n  }\n\n  /**\n   * Triggered before when an exact match happends.\n   * If the routeShouldMatch eventhandler is set\n   * and routeShouldMatch returns 'true' then match happends\n   * or routeShouldMatch returns 'false' then match is blocked\n   * @example\n   * ....\n   * Route.of({\n   *  routeShouldMatch: (router, route) => {\n   *    return true;\n   *  }\n   * })\n   *\n   * ...\n   *\n   * @protected\n   * @since 1.0.0\n   * @event\n   * @emits routeShouldMatch(router: Router, route: Route)\n   * @param {Router} router\n   * @return {boolean}\n   */\n  routeShouldMatch(router) {\n    return this._routeShouldMatch ? this._routeShouldMatch(router, this) : true;\n  }\n\n  /**\n   * Handles route is matched and displayed\n   *\n   * @example\n   * ....\n   * Route.of({\n   *  routeDidEnter: (router, route) => {\n   *    ...\n   *  }\n   * })\n   *\n   * ...\n   * @emits routeDidEnter\n   * @event\n   * @param {Router} router\n   */\n  routeDidEnter(router) {\n    return this._routeDidEnter ? this._routeDidEnter(router, this) : true;\n  }\n\n  /**\n   * Handles that route is removed by router\n   * @example\n   * ....\n   * Route.of({\n   *  routeDidExit: (router, route) => {\n   *    ...\n   *  }\n   * })\n   *\n   * ...\n   * @since 1.0.0\n   * @emits routeDidExit\n   * @event\n   * @param {Router} router\n   */\n  routeDidExit(router) {\n    return this._routeDidExit ? this._routeDidExit(router, this) : true;\n  }\n\n  /**\n   * If Route has a path or not\n   *\n   * @since 1.0.0\n   * @returns {boolean}\n   */\n  hasPath() {\n    return this._path.hasPath();\n  }\n\n  /**\n   * Queries if specified url match to the route path\n   * @param {string} url\n   * @returns {Match}\n   */\n  matchPath(url) {\n    this._match = matchPath(url, {\n      path: this._path.getPath(),\n      exact: this._exact,\n      strict: this._strict\n    });\n\n    return this._match;\n  }\n\n  /**\n   * Returns route path as string\n   *\n   * @since 1.0.0\n   * @returns {string}\n   */\n  getUrlPath() {\n    return this._path.getPath();\n  }\n\n  /**\n   * Clones route's path and returns\n   *\n   * @since 1.0.0\n   * @return {RoutePath}\n   */\n  getPath() {\n    return this._path.clone();\n  }\n\n  /**\n   * Clones new instance of the route\n   * @since 1.0.0\n   * @ignore\n   * @returns {Route}\n   */\n  clone() {\n    return Route.of({\n      path: this._path,\n      routes: this._routes.slice(),\n      props: Object.assign({}, this._props),\n      build: this._build,\n      exact: this._exact,\n      strict: this._strict\n    });\n  }\n}\n\nmodule.exports = Route;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/router/Route.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 246,
    "kind": "typedef",
    "name": "RouteMatch",
    "memberof": "src/router/Route.js",
    "static": true,
    "longname": "src/router/Route.js~RouteMatch",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isExact",
        "description": "if Requested path is an exact match or not."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Request params like id or name is represented by '/path/:id' or '/path2/:name'"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Matched route's path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Requested route path"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "RouteMatch"
    }
  },
  {
    "__docId__": 247,
    "kind": "typedef",
    "name": "RouteLocation",
    "memberof": "src/router/Route.js",
    "static": true,
    "longname": "src/router/Route.js~RouteLocation",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pathname",
        "description": "Requested url"
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "search",
        "description": "Url's search data"
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": "Url's hash data"
      },
      {
        "nullable": true,
        "types": [
          "RouteState"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "Route state"
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "Unique key"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "RouteLocation"
    }
  },
  {
    "__docId__": 248,
    "kind": "typedef",
    "name": "RouteParams",
    "memberof": "src/router/Route.js",
    "static": true,
    "longname": "src/router/Route.js~RouteParams",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Route Path definition"
      },
      {
        "nullable": true,
        "types": [
          "Array<Route>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "",
        "description": "routes Route children"
      },
      {
        "nullable": true,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "",
        "description": "exact Points that a route match must be exact or not"
      },
      {
        "nullable": true,
        "types": [
          "function(route: Route, nextState: RouteState)"
        ],
        "spread": false,
        "optional": false,
        "name": "routeShouldMatch",
        "description": "Handles if route is mathed as request url"
      },
      {
        "nullable": true,
        "types": [
          "function(Router: Router, route: Route)"
        ],
        "spread": false,
        "optional": false,
        "name": "routeDidEnter",
        "description": "Handles if route is displayed"
      },
      {
        "nullable": true,
        "types": [
          "function(Router: Router, route: Route)"
        ],
        "spread": false,
        "optional": false,
        "name": "routeDidExit",
        "description": "Handles if route is removed"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "RouteParams"
    }
  },
  {
    "__docId__": 249,
    "kind": "typedef",
    "name": "RouteState",
    "memberof": "src/router/Route.js",
    "static": true,
    "longname": "src/router/Route.js~RouteState",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "properties": [
      {
        "nullable": true,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "",
        "description": "routeData Requested data by user"
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "Request action 'PUSH', 'POP' or 'REPLACE'"
      },
      {
        "nullable": false,
        "types": [
          "RouteMatch"
        ],
        "spread": false,
        "optional": false,
        "name": "match",
        "description": "Request's match result"
      },
      {
        "nullable": false,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": "Keeps requested route's view"
      },
      {
        "nullable": true,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "",
        "description": "routingState Keeps user data when route runs"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "RouteState"
    }
  },
  {
    "__docId__": 250,
    "kind": "variable",
    "name": "mapComposer",
    "memberof": "src/router/Route.js",
    "static": true,
    "longname": "src/router/Route.js~mapComposer",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Route.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 251,
    "kind": "class",
    "name": "RoutePath",
    "memberof": "src/router/Route.js",
    "static": true,
    "longname": "src/router/Route.js~RoutePath",
    "access": "private",
    "export": false,
    "importPath": "@smartface/router/src/router/Route.js",
    "importStyle": null,
    "description": "Route's path ValueObject\nFor internal use",
    "lineNumber": 49,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "of",
    "memberof": "src/router/Route.js~RoutePath",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/router/Route.js~RoutePath.of",
    "access": "public",
    "description": "Factory method to create a new instance",
    "lineNumber": 56,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/router/Route.js~RoutePath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~RoutePath#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 65,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "_path",
    "memberof": "src/router/Route.js~RoutePath",
    "static": false,
    "longname": "src/router/Route.js~RoutePath#_path",
    "access": "private",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "getPath",
    "memberof": "src/router/Route.js~RoutePath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~RoutePath#getPath",
    "access": "public",
    "description": "Returns route path",
    "lineNumber": 74,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "isRoot",
    "memberof": "src/router/Route.js~RoutePath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~RoutePath#isRoot",
    "access": "public",
    "description": "Returns route is root or not.",
    "lineNumber": 84,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "toObject",
    "memberof": "src/router/Route.js~RoutePath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~RoutePath#toObject",
    "access": "public",
    "description": "Return quick representaion of the route-path",
    "lineNumber": 94,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{path: string, isRoot: boolean}}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{path: string, isRoot: boolean}"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "clone",
    "memberof": "src/router/Route.js~RoutePath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~RoutePath#clone",
    "access": "public",
    "description": "",
    "lineNumber": 105,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RoutePath}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RoutePath"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "hasPath",
    "memberof": "src/router/Route.js~RoutePath",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~RoutePath#hasPath",
    "access": "public",
    "description": "Return path is empty or not",
    "lineNumber": 115,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "boelean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 260,
    "kind": "class",
    "name": "Route",
    "memberof": "src/router/Route.js",
    "static": true,
    "longname": "src/router/Route.js~Route",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Route.js",
    "importStyle": null,
    "description": "Route implementation",
    "lineNumber": 126,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "of",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/router/Route.js~Route.of",
    "access": "public",
    "description": "Static helper method to create a new instance of Route",
    "lineNumber": 135,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "RouteParams"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Route"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 262,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RouteParams"
        ],
        "spread": false,
        "optional": false,
        "name": "param",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "_options",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_options",
    "access": "private",
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "type": {
      "types": [
        "{\"exact\": *, \"path\": *, \"sensitive\": *, \"strict\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "_exact",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_exact",
    "access": "private",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 265,
    "kind": "member",
    "name": "_strict",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_strict",
    "access": "private",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "_build",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_build",
    "access": "private",
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 267,
    "kind": "member",
    "name": "_path",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_path",
    "access": "private",
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "_routes",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_routes",
    "access": "private",
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 269,
    "kind": "member",
    "name": "map",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#map",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 270,
    "kind": "member",
    "name": "_to",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_to",
    "access": "private",
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 271,
    "kind": "member",
    "name": "_routeShouldMatch",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_routeShouldMatch",
    "access": "private",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "_routeDidEnter",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_routeDidEnter",
    "access": "private",
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 273,
    "kind": "member",
    "name": "_routeDidExit",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_routeDidExit",
    "access": "private",
    "description": null,
    "lineNumber": 169,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 274,
    "kind": "member",
    "name": "_state",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_state",
    "access": "private",
    "description": null,
    "lineNumber": 170,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "setState",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#setState",
    "access": "public",
    "description": "Merges specified state to current route state",
    "lineNumber": 185,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "getState",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#getState",
    "access": "public",
    "description": "Returns Route's current state",
    "lineNumber": 195,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "RouteState"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "toObject",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#toObject",
    "access": "public",
    "description": "Simple Object representation of the route",
    "lineNumber": 205,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "{path: string, routes: Array<object>}"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "toString",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#toString",
    "access": "public",
    "description": "String representation of the route",
    "lineNumber": 218,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 280,
    "kind": "get",
    "name": "routePath",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#routePath",
    "access": "public",
    "description": "Helper method to return excat path of the component",
    "lineNumber": 228,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "getRedirectto",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#getRedirectto",
    "access": "public",
    "description": "Returns redirection path",
    "lineNumber": 238,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "build",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#build",
    "access": "public",
    "description": "Builds a route's view.\nThis method is called whenever router is routing into that path.\nThere are some exceptions:\n- going into a tab, which the tab is created before\n- for iOS, goingBack via gesture or headerBar back",
    "lineNumber": 253,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": "Not the root router, the router which the route belongs to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Page"
      ],
      "spread": false,
      "description": "view = null - If the route has been built once, the previous view (page) is given. Otherwise it is null. If view is not null, returning the view back makes it singleton."
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "routeShouldMatch",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#routeShouldMatch",
    "access": "protected",
    "description": "Triggered before when an exact match happends.\nIf the routeShouldMatch eventhandler is set\nand routeShouldMatch returns 'true' then match happends\nor routeShouldMatch returns 'false' then match is blocked",
    "examples": [
      "....\nRoute.of({\n routeShouldMatch: (router, route) => {\n   return true;\n }\n})\n\n..."
    ],
    "lineNumber": 279,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "routeShouldMatch(router: Router, route: Route)"
      }
    ]
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "routeDidEnter",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#routeDidEnter",
    "access": "public",
    "description": "Handles route is matched and displayed",
    "examples": [
      "....\nRoute.of({\n routeDidEnter: (router, route) => {\n   ...\n }\n})\n\n..."
    ],
    "lineNumber": 299,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": ""
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "routeDidEnter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "routeDidExit",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#routeDidExit",
    "access": "public",
    "description": "Handles that route is removed by router",
    "examples": [
      "....\nRoute.of({\n routeDidExit: (router, route) => {\n   ...\n }\n})\n\n..."
    ],
    "lineNumber": 319,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": ""
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "routeDidExit"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "hasPath",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#hasPath",
    "access": "public",
    "description": "If Route has a path or not",
    "lineNumber": 329,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "matchPath",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#matchPath",
    "access": "public",
    "description": "Queries if specified url match to the route path",
    "lineNumber": 338,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Match}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Match"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 288,
    "kind": "member",
    "name": "_match",
    "memberof": "src/router/Route.js~Route",
    "static": false,
    "longname": "src/router/Route.js~Route#_match",
    "access": "private",
    "description": null,
    "lineNumber": 339,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "getUrlPath",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#getUrlPath",
    "access": "public",
    "description": "Returns route path as string",
    "lineNumber": 354,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "getPath",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#getPath",
    "access": "public",
    "description": "Clones route's path and returns",
    "lineNumber": 364,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "RoutePath"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "clone",
    "memberof": "src/router/Route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Route.js~Route#clone",
    "access": "public",
    "description": "Clones new instance of the route",
    "lineNumber": 374,
    "since": "1.0.0",
    "ignore": true,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Route}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Route"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 292,
    "kind": "file",
    "name": "src/router/Router.js",
    "content": "\"use strict\";\n\nconst Route = require(\"./Route\");\nconst matchRoutes = require(\"../common/matchRoutes\");\nconst createHistory = require(\"../common/createHistory\");\nlet actions = [];\n\nlet historyController;\n\nlet _lastRoute;\nconst listeners = new Set();\nconst history = [];\nconst dispatch = (location, action) => {\n  history.push([location.pathnamme, action]);\n  listeners.forEach(listener => listener(location, action));\n};\n\n/**\n * @typedef {object} RouterParams\n * @property {!string} [=false] path Routing path\n * @property {!Array<Route>} [=[]] routes Child routes\n * @property {?boolean} [=false] exact If it's only exact match or not\n * @property {?boolean} [=false] isRoot If it's root router\n * @property {?(string|null)} to Redirection path\n * @property {?boolean} [=false] strict\n * @property {?boolean} [=false] sensitive Path is case sensitive or not\n * @property {?function(router: Router, prevUrl: string, currentUrl: stirng, action: string)} routerDidEnter Handles the Router is actived.\n * @property {?function(router: Router, prevUrl: string, action: string)} routerDidExit Handles the Router is deactived.\n */\n\n/**\n * Router Base\n * Base Router implementation\n *\n * @class\n * @example\n *  const router = Router.of({\n *   path: \"/\",\n *   to: \"/pages/page2\",\n *   isRoot: true,\n *   routes: [\n *       Route.of({\n *           path: \"/pages/page2\",\n *           build: (match, state) => {\n *               let Page2 = require(\"pages/page2\");\n *               return new Page2();\n *           }\n *       }),\n *       StackRouter.of({\n *           path: \"/stack\",\n *           to: \"/stack/path1\",\n *           headerBarParams: () => { ios: { translucent: true } },\n *           routes: [\n *               Route.of({\n *                   path: \"/stack/path1\",\n *                   build: (match, state, router) => new Page1(state.data, router)\n *               }),\n *               Route.of({\n *                   path: \"/stack/path2\",\n *                   routeShouldMatch: (route, nextState) => {\n *                       console.log('routeShouldMatch');\n *                       if (!nextState.routeData.applied) {\n *                           // blocks route changing\n *                           return false;\n *                       }\n *                       return false;\n *                   },\n *                   build: (router, route) => {\n *                       const { routeData, view } = route.getState();\n *                       return new Page2(routeData, router);\n *                   }\n *               })\n *           ]\n *       }),\n *       BottomTabBarRouter.of({\n *           path: \"/bottom\",\n *           to: \"/bottom/stack2/path1\",\n *           tabbarParams: () => ({\n *               ios: { translucent: false },\n *               itemColor: Color.RED,\n *               unselectedItemColor: Color.YELLOW,\n *               backgroundColor: Color.BLUE\n *           }),\n *           items: () => [{ title: \"page1\" }, { title: \"page2\" }, { title: \"page3\" }],\n *           routes: [\n *               StackRouter.of({\n *                   path: \"/bottom/stack\",\n *                   to: \"/bottom/stack/path1\",\n *                   headerBarParams: () => { ios: { translucent: false } },\n *                   routes: [\n *                       Route.of({\n *                           path: \"/bottom/stack/path1\",\n *                           build: (router, route) => new Page1(route.getState().routeData, router, \"/stack/path2\")\n *                       }),\n *                       Route.of({\n *                           path: \"/bottom/stack/path2\",\n *                           build: (router, route) => {\n *                               const { routeData, view } = route.getState();\n *\n *                               return new Page2(routeData, router, \"/bottom/stack2/path1\");\n *                           }\n *                       })\n *                   ]\n *               }),\n *               StackRouter.of({\n *                   path: \"/bottom/stack2\",\n *                   to: \"/bottom/stack2/path1\",\n *                   headerBarParams: () => { ios: { translucent: false } },\n *                   routes: [\n *                       Route.of({\n *                           path: \"/bottom/stack2/path1\",\n *                           build: (router, route) => new Page1(route.getState().routeData, router, \"/bottom/stack/path2\")\n *                       }),\n *                       Route.of({\n *                           path: \"/bottom/stack2/path2\",\n *                           build: (router, route) => {\n *                               return new Page2(route.getState().routeData, router);\n *                           }\n *                       })\n *                   ]\n *               })\n *           ]\n *       })\n *   ]\n * });\n *\n * @since 1.0.0\n * @extends {Route}\n */\nclass Router extends Route {\n  static getHistoryStack() {\n    return history.slice();\n  }\n\n  static getHistoryByIndex(index) {\n    return history[index];\n  }\n  /**\n   * Factory method to create a new Router instance\n   *\n   * @param {RouterParams} props\n   */\n  static of(props = {}) {\n    return new Router(props);\n  }\n\n  static createBlocker(fn) {\n    return (router, path, routeData, action, doneFn) => {\n      fn(path, routeData, action, ok => ok && doneFn());\n    };\n  }\n\n  /**\n   * @constructor\n   * @param {RouterParams} param\n   */\n  constructor({\n    path = \"\",\n    build = null,\n    routes = [],\n    exact = false,\n    sensitive = true,\n    strict = true,\n    isRoot = false,\n    to = null,\n    routerDidEnter,\n    routerDidExit,\n    routeShouldMatch\n  }) {\n    super({ path, build, routes, to, isRoot, routeShouldMatch });\n\n    this._historyUnlisten = () => null;\n    this._handlers = {\n      routerDidEnter,\n      routerDidExit\n    };\n\n    if (isRoot) {\n      /** @type {HistoryListener} */\n      listeners.clear();\n      historyController = createHistory({\n        sensitive,\n        strict,\n        exact,\n        path,\n        getUserConfirmation: (blockerFn, callback) => {\n          return blockerFn(callback);\n        }\n      });\n\n      this.initialize(historyController, (location, action, target) =>\n        this.onHistoryChange(location, action, target)\n      );\n    }\n\n    this._isRoot = isRoot;\n    this._exact = exact;\n    this._strict = strict;\n    this._sensitive = sensitive;\n  }\n\n  /**\n   * Router is initialized by parent\n   *\n   * @protected\n   * @since 1.0.0\n   * @param {HistoryListener} parentHistory\n   * @param {function} onHistoryChange Root onHistoryChange handler\n   */\n  initialize(parentHistory, onHistoryChange) {\n    /** @type {HistoryController} */\n    this._historyController = parentHistory.createNode(\n      Object.assign({}, this._options, {\n        getUserConfirmation: (blockerFn, callback) => {\n          return blockerFn(callback);\n        }\n      })\n    );\n\n    this._routes.forEach(route => {\n      // if (route instanceof Router) {\n      route.initialize &&\n        route.initialize(this._historyController, onHistoryChange);\n      // }\n    });\n\n    this._unlisten = this._historyController.listen((location, action) => {\n      onHistoryChange(location, action, this); // fires root's onHistoryChange\n    });\n\n    // changes route without history\n    this.dispatch = (location, action, target) => {\n      onHistoryChange(location, action, target);\n    };\n  }\n\n  /**\n   * @ignore\n   * @since 1.0.0\n   */\n  getHistory() {\n    return this._historyController.history;\n  }\n\n  /**\n   * Return current url\n   *\n   * @since 1.0.0\n   * @return {string}\n   */\n  getCurrentUrl() {\n    return this._currentUrl;\n  }\n\n  /**\n   * Adds eventlisteners to listen history changes\n   * @example\n   * const unlisten = router.listen((location, action) => {\n   *     console.log(` ---- new route location: ${location.pathname} action : ${action}`);\n   * });\n   *\n   * @since 1.0.0\n   * @param {HistoryListener} fn\n   */\n  listen(fn) {\n    listeners.add(fn);\n\n    return () => listeners.delete(fn);\n  }\n\n  /**\n   * Adds route block handler to history. When history is changed in anywhere\n   * then the handler intercepts before history is changed.\n   * @example\n   * var unload = router.addRouteBlocker((path, routeData, action, ok) => {\n   * alert({\n   *  message: \"Would you like to answer?\",\n   *  title: \"Question\", //optional\n   *  buttons: [{\n   *  text: \"Yes\",\n   *      type: AlertView.Android.ButtonType.POSITIVE,\n   *      onClick: function() {\n   *        ok(true);\n   *      }\n   *    },\n   *    {\n   *      text: \"No\",\n   *      type: AlertView.Android.ButtonType.NEGATIVE,\n   *      onClick: function() {\n   *        ok(false);\n   *      }\n   *    }\n   *  ]\n   *  });\n   * });\n   *\n   * @since 1.0.0\n   * @param {RouterBlockHandler} fn\n   */\n  addRouteBlocker(fn) {\n    Router.blocker = Router.createBlocker(fn);\n    this._unblock = () => (Router.blocker = null);\n    /*this._historyController.block(\n      (location, action) => callback => {\n        fn(location, action, callback);\n      }\n    );*/\n\n    return this._unblock;\n  }\n\n  /**\n   * Handles history changes. Just Root router, because routing flow mmust be always root to children,\n   * in order to change display logic all the time.\n   *\n   * @since 1.0.0\n   * @protected\n   * @param {RouteLocation} location\n   * @param {Object} action\n   * @param {Router} target Target Router which pushed to its router.\n   */\n  onHistoryChange(location, action, target) {\n    this._matches = matchRoutes([this].concat(this._routes), location.pathname);\n    this.renderMatches(this._matches, location, action, target);\n  }\n\n  /**\n   * Removes last entry from history without trigger history is changed.\n   *\n   * @since 1.0.0\n   * @ignore\n   * @protected\n   */\n  routeRollback() {\n    this._historyController.rollback();\n  }\n\n  /**\n   * Renders route matches by requested path\n   *\n   * @protected\n   * @since 1.0.0\n   * @emits RouteShouldMatchHandler\n   * @param {Array<{isExact: boolean,params: object,path: string,url: string}>} matches Route matches of the current request\n   * @param {RouteLocation} location Current location\n   * @param {string} action Current history action\n   * @param {Router} target Target Router which pushed to its router.\n   */\n  renderMatches(matches, location, action, target) {\n    const routeData = location.state;\n    matches.some(({ match, route }, index) => {\n      if (route !== this && route instanceof Router) {\n        // if(index > 0 && this._isRoot)\n        actions.push([this, route]); // add new router display logic from root to children\n        // move routes to child router\n        route.renderMatches(\n          matches.slice(index, matches.length),\n          location,\n          action,\n          target\n        );\n\n        return true;\n      } else if (match.isExact === true) {\n        if (\n          route.routeShouldMatch(route, { match, action, routeData }) === true\n        ) {\n          if (route.getRedirectto()) {\n            actions = [];\n            target.routeRollback();\n            return this.redirectRoute(route, routeData, action);\n          }\n\n          const routingState =\n            (route.getRoutingState &&\n              route.getRoutingState(route._state, {\n                match,\n                action,\n                routeData\n              })) ||\n            {};\n\n          route.setState({ match, action, routeData, routingState });\n\n          // If child router then push or pop route to child route's history\n          if (target != this && this._currentUrl !== match.url) {\n            // if (!this.isUrlCurrent(match.url, action)) {\n            this._historyController.preventDefault();\n            switch (action) {\n              case \"PUSH\":\n                this._historyController.push(match.url, routeData);\n                break;\n              case \"POP\":\n                this._historyController.goBack();\n                break;\n            }\n          }\n\n          _lastRoute && _lastRoute.routeDidExit(this);\n          this.routeDidMatch(route); // fires routeDidMatch\n          const view = this.renderRoute(route); // build route's view\n          route.setState({ view }); // keep view in the route's state\n          this.routeWillEnter && this.routeWillEnter(route); // fires routeWillEnter\n          actions.forEach(\n            ([parent, child]) =>\n              parent.addChildRouter && parent.addChildRouter(child)\n          ); // display routers' view\n          this.routerDidEnter && this.routerDidEnter(route); // fires routerDidEnter\n          route.routeDidEnter(this); // fires routeDidEnter\n          _lastRoute = route; // save matched route as last route\n          this._currentAction = action;\n          this._currentUrl = match.url;\n          dispatch(location, action);\n        }\n\n        actions = []; // clear display actions\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Handles a new route activated in the router\n   *\n   * @since 1.0.0\n   * @event\n   * @protected\n   * @param {Route} route\n   */\n  routerWillEnter(route) {}\n\n  /**\n   * @since 1.0.0\n   * @ignore\n   * @param {string} url\n   * @param {string} action\n   */\n  isUrlCurrent(url, action) {\n    const res = this._currentUrl === url && this._currentAction === action;\n    return res;\n  }\n\n  /**\n   * Life-cycle event handler handles Router is activated\n   * @example\n   * ....\n   * Router.of({\n   *  routerDidEnter: (router, route) => {\n   *    ...\n   *  }\n   * })\n   *\n   * @since 1.0.0\n   * @emits routerDidEnter\n   * @protected\n   * @param {Route} route\n   */\n  routerDidEnter(route) {\n    this._handlers.routerDidEnter && this._handlers.routerDidEnter(this, route);\n  }\n\n  /**\n   * Sets the router statically as active router\n   *\n   * @since 1.0.0\n   * @protected\n   * @param {string} action\n   */\n  setasActiveRouter(action) {\n    Router.currentRouter &&\n      this != Router.currentRouter &&\n      Router.currentRouter.routerDidExit &&\n      Router.currentRouter.routerDidExit(action);\n    Router.currentRouter = this;\n  }\n\n  /**\n   * Handles router is deactivated.\n   *\n   * @since 1.0.0\n   * @example\n   * ....\n   * Router.of({\n   *  routerDidExit: (router, action) => {\n   *    ...\n   *  }\n   * })\n   *\n   * ...\n   * @emits routerDidExit\n   * @param {string} action\n   */\n  routerDidExit(action) {\n    this._handlers.routerDidExit && this._handlers.routerDidExit(this, action);\n  }\n\n  /**\n   * Redirects route and removes last route record from history\n   *\n   * @protected\n   * @param {Route} route\n   * @param {object} routeData\n   * @param {string} action\n   */\n  redirectRoute(route, routeData, action) {\n    // redirection of a route\n    this.push(route.getRedirectto(), routeData); // and add new route\n  }\n\n  /**\n   * @since 1.0.0\n   * @private\n   * @ignore\n   * @param {Page} view\n   */\n  isViewEmpty(view) {\n    return view !== null || view !== undefined;\n  }\n\n  /**\n   * Route is matched handler\n   *\n   * @since 1.0.0\n   * @protected\n   * @param {Route} route\n   */\n  routeDidMatch(route) {\n    const { match, action, routeData } = route.getState();\n    if (match.isExact) {\n      const prevUrl = this._currentUrl;\n      this.setasActiveRouter(action);\n    }\n  }\n\n  /**\n   * Render route\n   *\n   * @since 1.0.0\n   * @protected\n   * @param {Route} route\n   * @throws {TypeError}\n   */\n  renderRoute(route) {\n    const view = route.build(this);\n    if (!view) throw new TypeError(`${route} 's View cannot be empty!`);\n\n    return view;\n  }\n\n  /**\n   * Helper method that pushes the route's url to history\n   *\n   * @since 1.0.0\n   * @protected\n   * @param {Route} route\n   */\n  pushRoute(route) {\n    if (!(route instanceof Route))\n      throw new TypeError(`route must be instance of Route`);\n    this.push(route.getRedirectto() || route.getUrlPath());\n  }\n\n  /**\n   * Change history by specified path\n   *\n   * @param {object|string} path - Path or matches of the route\n   * @param {!object} [routeData={}] routeData - Routing data\n   * @return {Router}\n   */\n  push(path, routeData = {}) {\n    if (!path) throw new TypeError(`path must not be empty`);\n    if (path.charAt(0) !== \"/\") {\n      path = this._path.getPath() + \"/\" + path;\n    }\n\n    if (Router.blocker) {\n      Router.blocker(this, path, routeData, \"PUSH\", () =>\n        this._historyController.push(path, routeData)\n      );\n\n      return this;\n    }\n    this._historyController.push(path, routeData);\n\n    return this;\n  }\n\n  /**\n   * Replaces specified path's state\n   *\n   * @since 1.0.0\n   * @ignore\n   * @param {string} path\n   * @param {data} routeData\n   */\n  replace(path, routeData) {\n    this._historyController.history.replace(path, routeData);\n  }\n\n  /**\n   * Rewinds the history\n   * @since 1.0.0\n   */\n  goBack() {\n    if (Router.blocker) {\n      Router.blocker(this, null, null, \"POP\", () =>\n        this._historyController.goBack()\n      );\n\n      return this;\n    }\n\n    this._historyController.goBack();\n  }\n\n  /**\n   * Returns last location of history\n   *\n   * @since 1.0.0\n   * @return {RouteLocation}\n   */\n  getLocation() {\n    return this._historyController.history.location;\n  }\n\n  /**\n   * Returns History entries as Array\n   *\n   * @since 1.0.0\n   * @return {Array<string>}\n   */\n  getHistoryasArray() {\n    return this._historyController.getHistoryasArray();\n  }\n\n  /**\n   * Forwards history\n   * @since 1.0.0\n   */\n  goForward() {\n    this._historyController.history.goForward();\n  }\n\n  /**\n   * Changes route by history index.\n   *\n   * @experimental\n   * @since 1.0.0\n   * @ignore\n   * @param {number} index\n   */\n  go(index) {\n    this._historyController.go(index);\n  }\n\n  /**\n   * Adds new route\n   *\n   * @since 1.0.0\n   * @ignore\n   * @experimental\n   * @param {Route} route\n   */\n  add(route) {\n    this._routes.push(route);\n  }\n\n  /**\n   * Iterates child routes\n   *\n   * @since 1.0.0\n   * @param {function} fn\n   * @return {Array}\n   */\n  map(fn) {\n    return this._routes.map(fn);\n  }\n\n  /**\n   * Unloads the router\n   * @since 1.0.0\n   */\n  dispose() {\n    this._historyUnlisten();\n    // if (this._isRoot) {\n    this._historyController.dispose();\n    this._historyController = null;\n    // }\n    this._routes.forEach(route => route.dispose());\n    this._routes = null;\n    this._historyUnlisten = null;\n    this._unblock && this._unblock();\n    this._unblock = null;\n    this._handlers = null;\n    this._unlisten && this._unlisten();\n    this._listen = null;\n  }\n}\n\nmodule.exports = Router;\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/router/Router.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "Route",
    "memberof": "src/router/Router.js",
    "static": true,
    "longname": "src/router/Router.js~Route",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "matchRoutes",
    "memberof": "src/router/Router.js",
    "static": true,
    "longname": "src/router/Router.js~matchRoutes",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "createHistory",
    "memberof": "src/router/Router.js",
    "static": true,
    "longname": "src/router/Router.js~createHistory",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "actions",
    "memberof": "src/router/Router.js",
    "static": true,
    "longname": "src/router/Router.js~actions",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "variable",
    "name": "listeners",
    "memberof": "src/router/Router.js",
    "static": true,
    "longname": "src/router/Router.js~listeners",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "variable",
    "name": "history",
    "memberof": "src/router/Router.js",
    "static": true,
    "longname": "src/router/Router.js~history",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "dispatch",
    "memberof": "src/router/Router.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/router/Router.js~dispatch",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "location",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 300,
    "kind": "typedef",
    "name": "RouterParams",
    "memberof": "src/router/Router.js",
    "static": true,
    "longname": "src/router/Router.js~RouterParams",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "",
        "description": "path Routing path"
      },
      {
        "nullable": false,
        "types": [
          "Array<Route>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "",
        "description": "routes Child routes"
      },
      {
        "nullable": true,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "",
        "description": "exact If it's only exact match or not"
      },
      {
        "nullable": true,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "",
        "description": "isRoot If it's root router"
      },
      {
        "nullable": true,
        "types": [
          "string",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": "Redirection path"
      },
      {
        "nullable": true,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "",
        "description": "strict"
      },
      {
        "nullable": true,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "",
        "description": "sensitive Path is case sensitive or not"
      },
      {
        "nullable": true,
        "types": [
          "function(router: Router, prevUrl: string, currentUrl: stirng, action: string)"
        ],
        "spread": false,
        "optional": false,
        "name": "routerDidEnter",
        "description": "Handles the Router is actived."
      },
      {
        "nullable": true,
        "types": [
          "function(router: Router, prevUrl: string, action: string)"
        ],
        "spread": false,
        "optional": false,
        "name": "routerDidExit",
        "description": "Handles the Router is deactived."
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "RouterParams"
    }
  },
  {
    "__docId__": 301,
    "kind": "class",
    "name": "Router",
    "memberof": "src/router/Router.js",
    "static": true,
    "longname": "src/router/Router.js~Router",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/router/Router.js",
    "importStyle": null,
    "description": "Router Base\nBase Router implementation",
    "examples": [
      " const router = Router.of({\n  path: \"/\",\n  to: \"/pages/page2\",\n  isRoot: true,\n  routes: [\n      Route.of({\n          path: \"/pages/page2\",\n          build: (match, state) => {\n              let Page2 = require(\"pages/page2\");\n              return new Page2();\n          }\n      }),\n      StackRouter.of({\n          path: \"/stack\",\n          to: \"/stack/path1\",\n          headerBarParams: () => { ios: { translucent: true } },\n          routes: [\n              Route.of({\n                  path: \"/stack/path1\",\n                  build: (match, state, router) => new Page1(state.data, router)\n              }),\n              Route.of({\n                  path: \"/stack/path2\",\n                  routeShouldMatch: (route, nextState) => {\n                      console.log('routeShouldMatch');\n                      if (!nextState.routeData.applied) {\n                          // blocks route changing\n                          return false;\n                      }\n                      return false;\n                  },\n                  build: (router, route) => {\n                      const { routeData, view } = route.getState();\n                      return new Page2(routeData, router);\n                  }\n              })\n          ]\n      }),\n      BottomTabBarRouter.of({\n          path: \"/bottom\",\n          to: \"/bottom/stack2/path1\",\n          tabbarParams: () => ({\n              ios: { translucent: false },\n              itemColor: Color.RED,\n              unselectedItemColor: Color.YELLOW,\n              backgroundColor: Color.BLUE\n          }),\n          items: () => [{ title: \"page1\" }, { title: \"page2\" }, { title: \"page3\" }],\n          routes: [\n              StackRouter.of({\n                  path: \"/bottom/stack\",\n                  to: \"/bottom/stack/path1\",\n                  headerBarParams: () => { ios: { translucent: false } },\n                  routes: [\n                      Route.of({\n                          path: \"/bottom/stack/path1\",\n                          build: (router, route) => new Page1(route.getState().routeData, router, \"/stack/path2\")\n                      }),\n                      Route.of({\n                          path: \"/bottom/stack/path2\",\n                          build: (router, route) => {\n                              const { routeData, view } = route.getState();\n\n                              return new Page2(routeData, router, \"/bottom/stack2/path1\");\n                          }\n                      })\n                  ]\n              }),\n              StackRouter.of({\n                  path: \"/bottom/stack2\",\n                  to: \"/bottom/stack2/path1\",\n                  headerBarParams: () => { ios: { translucent: false } },\n                  routes: [\n                      Route.of({\n                          path: \"/bottom/stack2/path1\",\n                          build: (router, route) => new Page1(route.getState().routeData, router, \"/bottom/stack/path2\")\n                      }),\n                      Route.of({\n                          path: \"/bottom/stack2/path2\",\n                          build: (router, route) => {\n                              return new Page2(route.getState().routeData, router);\n                          }\n                      })\n                  ]\n              })\n          ]\n      })\n  ]\n});"
    ],
    "lineNumber": 130,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "Route"
    ]
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "getHistoryStack",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/router/Router.js~Router.getHistoryStack",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "getHistoryByIndex",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/router/Router.js~Router.getHistoryByIndex",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "of",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/router/Router.js~Router.of",
    "access": "public",
    "description": "Factory method to create a new Router instance",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "RouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "createBlocker",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/router/Router.js~Router.createBlocker",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 306,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RouterParams"
        ],
        "spread": false,
        "optional": false,
        "name": "param",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "_historyUnlisten",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_historyUnlisten",
    "access": "private",
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "_handlers",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_handlers",
    "access": "private",
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "type": {
      "types": [
        "{\"routerDidEnter\": *, \"routerDidExit\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "_isRoot",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_isRoot",
    "access": "private",
    "description": null,
    "lineNumber": 196,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "_exact",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_exact",
    "access": "private",
    "description": null,
    "lineNumber": 197,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "_strict",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_strict",
    "access": "private",
    "description": null,
    "lineNumber": 198,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "_sensitive",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_sensitive",
    "access": "private",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#initialize",
    "access": "protected",
    "description": "Router is initialized by parent",
    "lineNumber": 210,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "HistoryListener"
        ],
        "spread": false,
        "optional": false,
        "name": "parentHistory",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "onHistoryChange",
        "description": "Root onHistoryChange handler"
      }
    ],
    "return": null
  },
  {
    "__docId__": 314,
    "kind": "member",
    "name": "_historyController",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_historyController",
    "access": "private",
    "description": null,
    "lineNumber": 212,
    "type": {
      "nullable": null,
      "types": [
        "HistoryController"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "_unlisten",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_unlisten",
    "access": "private",
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "dispatch",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#dispatch",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "getHistory",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#getHistory",
    "access": "public",
    "description": "",
    "lineNumber": 241,
    "since": "1.0.0",
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "getCurrentUrl",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#getCurrentUrl",
    "access": "public",
    "description": "Return current url",
    "lineNumber": 251,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "listen",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#listen",
    "access": "public",
    "description": "Adds eventlisteners to listen history changes",
    "examples": [
      "const unlisten = router.listen((location, action) => {\n    console.log(` ---- new route location: ${location.pathname} action : ${action}`);\n});"
    ],
    "lineNumber": 265,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "HistoryListener"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "addRouteBlocker",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#addRouteBlocker",
    "access": "public",
    "description": "Adds route block handler to history. When history is changed in anywhere\nthen the handler intercepts before history is changed.",
    "examples": [
      "var unload = router.addRouteBlocker((path, routeData, action, ok) => {\nalert({\n message: \"Would you like to answer?\",\n title: \"Question\", //optional\n buttons: [{\n text: \"Yes\",\n     type: AlertView.Android.ButtonType.POSITIVE,\n     onClick: function() {\n       ok(true);\n     }\n   },\n   {\n     text: \"No\",\n     type: AlertView.Android.ButtonType.NEGATIVE,\n     onClick: function() {\n       ok(false);\n     }\n   }\n ]\n });\n});"
    ],
    "lineNumber": 300,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "RouterBlockHandler"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "_unblock",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_unblock",
    "access": "private",
    "description": null,
    "lineNumber": 302,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "onHistoryChange",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#onHistoryChange",
    "access": "protected",
    "description": "Handles history changes. Just Root router, because routing flow mmust be always root to children,\nin order to change display logic all the time.",
    "lineNumber": 322,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "RouteLocation"
        ],
        "spread": false,
        "optional": false,
        "name": "location",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Target Router which pushed to its router."
      }
    ],
    "return": null
  },
  {
    "__docId__": 323,
    "kind": "member",
    "name": "_matches",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_matches",
    "access": "private",
    "description": null,
    "lineNumber": 323,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "routeRollback",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#routeRollback",
    "access": "protected",
    "description": "Removes last entry from history without trigger history is changed.",
    "lineNumber": 334,
    "since": "1.0.0",
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 325,
    "kind": "method",
    "name": "renderMatches",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#renderMatches",
    "access": "protected",
    "description": "Renders route matches by requested path",
    "lineNumber": 349,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<{isExact: boolean,params: object,path: string,url: string}>"
        ],
        "spread": false,
        "optional": false,
        "name": "matches",
        "description": "Route matches of the current request"
      },
      {
        "nullable": null,
        "types": [
          "RouteLocation"
        ],
        "spread": false,
        "optional": false,
        "name": "location",
        "description": "Current location"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "Current history action"
      },
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Target Router which pushed to its router."
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "RouteShouldMatchHandler"
      }
    ],
    "return": null
  },
  {
    "__docId__": 326,
    "kind": "member",
    "name": "routeWillEnter",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#routeWillEnter",
    "access": "public",
    "description": null,
    "lineNumber": 403,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 328,
    "kind": "member",
    "name": "_currentAction",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_currentAction",
    "access": "private",
    "description": null,
    "lineNumber": 411,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "_currentUrl",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_currentUrl",
    "access": "private",
    "description": null,
    "lineNumber": 412,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "routerWillEnter",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#routerWillEnter",
    "access": "protected",
    "description": "Handles a new route activated in the router",
    "lineNumber": 430,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Route"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "isUrlCurrent",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#isUrlCurrent",
    "access": "public",
    "description": "",
    "lineNumber": 438,
    "since": "1.0.0",
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "routerDidEnter",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#routerDidEnter",
    "access": "protected",
    "description": "Life-cycle event handler handles Router is activated",
    "examples": [
      "....\nRouter.of({\n routerDidEnter: (router, route) => {\n   ...\n }\n})"
    ],
    "lineNumber": 458,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "Route"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": ""
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "routerDidEnter"
      }
    ],
    "return": null
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "setasActiveRouter",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#setasActiveRouter",
    "access": "protected",
    "description": "Sets the router statically as active router",
    "lineNumber": 469,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "routerDidExit",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#routerDidExit",
    "access": "public",
    "description": "Handles router is deactivated.",
    "examples": [
      "....\nRouter.of({\n routerDidExit: (router, action) => {\n   ...\n }\n})\n\n..."
    ],
    "lineNumber": 493,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "routerDidExit"
      }
    ],
    "return": null
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "redirectRoute",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#redirectRoute",
    "access": "protected",
    "description": "Redirects route and removes last route record from history",
    "lineNumber": 505,
    "params": [
      {
        "nullable": null,
        "types": [
          "Route"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "routeData",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "isViewEmpty",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#isViewEmpty",
    "access": "private",
    "description": "",
    "lineNumber": 516,
    "since": "1.0.0",
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Page"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "routeDidMatch",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#routeDidMatch",
    "access": "protected",
    "description": "Route is matched handler",
    "lineNumber": 527,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "Route"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "renderRoute",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#renderRoute",
    "access": "protected",
    "description": "Render route",
    "lineNumber": 543,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "Route"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": ""
      }
    ],
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "pushRoute",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#pushRoute",
    "access": "protected",
    "description": "Helper method that pushes the route's url to history",
    "lineNumber": 557,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "Route"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "push",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#push",
    "access": "public",
    "description": "Change history by specified path",
    "lineNumber": 570,
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Path or matches of the route"
      },
      {
        "nullable": false,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "routeData",
        "description": "routeData - Routing data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Router"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "replace",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#replace",
    "access": "public",
    "description": "Replaces specified path's state",
    "lineNumber": 596,
    "since": "1.0.0",
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "data"
        ],
        "spread": false,
        "optional": false,
        "name": "routeData",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "goBack",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#goBack",
    "access": "public",
    "description": "Rewinds the history",
    "lineNumber": 604,
    "since": "1.0.0",
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "getLocation",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#getLocation",
    "access": "public",
    "description": "Returns last location of history",
    "lineNumber": 622,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "RouteLocation"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "getHistoryasArray",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#getHistoryasArray",
    "access": "public",
    "description": "Returns History entries as Array",
    "lineNumber": 632,
    "since": "1.0.0",
    "return": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "goForward",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#goForward",
    "access": "public",
    "description": "Forwards history",
    "lineNumber": 640,
    "since": "1.0.0",
    "params": [],
    "return": null
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "go",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#go",
    "access": "public",
    "description": "Changes route by history index.",
    "lineNumber": 652,
    "experimental": true,
    "since": "1.0.0",
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "add",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#add",
    "access": "public",
    "description": "Adds new route",
    "lineNumber": 664,
    "experimental": true,
    "since": "1.0.0",
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Route"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "map",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#map",
    "access": "public",
    "description": "Iterates child routes",
    "lineNumber": 675,
    "since": "1.0.0",
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/router/Router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/router/Router.js~Router#dispose",
    "access": "public",
    "description": "Unloads the router",
    "lineNumber": 683,
    "since": "1.0.0",
    "params": [],
    "return": null
  },
  {
    "__docId__": 351,
    "kind": "member",
    "name": "_routes",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_routes",
    "access": "private",
    "description": null,
    "lineNumber": 690,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "_listen",
    "memberof": "src/router/Router.js~Router",
    "static": false,
    "longname": "src/router/Router.js~Router#_listen",
    "access": "private",
    "description": null,
    "lineNumber": 696,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 358,
    "kind": "file",
    "name": "src/types.js",
    "content": "/**\n * @external {Page} http://docs.smartface.io/#!/api/UI.Page\n */\n\n/**\n * @external {NavigationController} http://docs.smartface.io/#!/api/UI.NavigationController\n */\n\n/**\n * @external {BottomTabbarController} http://docs.smartface.io/#!/api/UI.BottomTabBarController\n */\n\n/**\n * @external {TabBarItem} http://docs.smartface.io/#!/api/UI.TabBarItem\n */\n\n/**\n * @external {Image} http://docs.smartface.io/#!/api/UI.Image\n */\n\n/**\n * @external {Color} http://docs.smartface.io/#!/api/UI.Color\n */\n\n/**\n * @typedef {function(route: Route, nextState: RouteState)} RouteShouldMatchHandler\n */\n\n/**\n * @typedef {function(route: Route, nextState: RouteState)} RouteBuildHandler\n */\n\n/**\n * @typedef {function(path: string, routeData: object, action: string, okFn: function)} RouterBlockHandler\n *\n */\n\n/**\n * @typedef {function(location: RouteLocation, action: string)} HistoryListener\n */\n/**\n * History implementation\n *\n * @typedef {object} History\n *\n * @property {number} length Length of the history stack\n * @property {string} action Last action\n * @property {number} index Current active index of the history\n * @property {Array<RouteLocation>} entries\n * @property {function} createHref Creates an appropriate url given data\n * @property {function(path: string, data: object)} push Pushes a new entry\n * @property {function(path: string, data: object)} replace Replaces specified history entry with a desired one\n * @property {function} rollback Rollback last entry\n * @property {function(index: number)} go Jumps to desired history entry by index\n * @property {function} clear Clears all history\n * @property {function} goBack Jumps to previous entry\n * @property {function} goForward Jumps to next entry\n * @property {function(index: number):boolean} canGo Checks if history goes back or not\n * @property {function(fn: RouterBlockHandler):function} block Blocks history changes to ask user or run an another process then resume or break it.\n * @property {function(fn: HistoryListener):function} listen Adds event-handlers to listen history changes.\n *\n */\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 359,
    "kind": "external",
    "name": "Page",
    "externalLink": "http://docs.smartface.io/#!/api/UI.Page",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~Page",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 360,
    "kind": "external",
    "name": "NavigationController",
    "externalLink": "http://docs.smartface.io/#!/api/UI.NavigationController",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~NavigationController",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 361,
    "kind": "external",
    "name": "BottomTabbarController",
    "externalLink": "http://docs.smartface.io/#!/api/UI.BottomTabBarController",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~BottomTabbarController",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 362,
    "kind": "external",
    "name": "TabBarItem",
    "externalLink": "http://docs.smartface.io/#!/api/UI.TabBarItem",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~TabBarItem",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 363,
    "kind": "external",
    "name": "Image",
    "externalLink": "http://docs.smartface.io/#!/api/UI.Image",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~Image",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 364,
    "kind": "external",
    "name": "Color",
    "externalLink": "http://docs.smartface.io/#!/api/UI.Color",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~Color",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 365,
    "kind": "typedef",
    "name": "RouteShouldMatchHandler",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~RouteShouldMatchHandler",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(route: Route, nextState: RouteState)"
      ],
      "optional": false,
      "name": "RouteShouldMatchHandler"
    }
  },
  {
    "__docId__": 366,
    "kind": "typedef",
    "name": "RouteBuildHandler",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~RouteBuildHandler",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(route: Route, nextState: RouteState)"
      ],
      "optional": false,
      "name": "RouteBuildHandler"
    }
  },
  {
    "__docId__": 367,
    "kind": "typedef",
    "name": "RouterBlockHandler",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~RouterBlockHandler",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(path: string, routeData: object, action: string, okFn: function)"
      ],
      "optional": false,
      "name": "RouterBlockHandler"
    }
  },
  {
    "__docId__": 368,
    "kind": "typedef",
    "name": "HistoryListener",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~HistoryListener",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(location: RouteLocation, action: string)"
      ],
      "optional": false,
      "name": "HistoryListener"
    }
  },
  {
    "__docId__": 369,
    "kind": "typedef",
    "name": "History",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~History",
    "access": "public",
    "description": "History implementation",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "Length of the history stack"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "Last action"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "Current active index of the history"
      },
      {
        "nullable": null,
        "types": [
          "Array<RouteLocation>"
        ],
        "spread": false,
        "optional": false,
        "name": "entries",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "createHref",
        "description": "Creates an appropriate url given data"
      },
      {
        "nullable": null,
        "types": [
          "function(path: string, data: object)"
        ],
        "spread": false,
        "optional": false,
        "name": "push",
        "description": "Pushes a new entry"
      },
      {
        "nullable": null,
        "types": [
          "function(path: string, data: object)"
        ],
        "spread": false,
        "optional": false,
        "name": "replace",
        "description": "Replaces specified history entry with a desired one"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "rollback",
        "description": "Rollback last entry"
      },
      {
        "nullable": null,
        "types": [
          "function(index: number)"
        ],
        "spread": false,
        "optional": false,
        "name": "go",
        "description": "Jumps to desired history entry by index"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "clear",
        "description": "Clears all history"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "goBack",
        "description": "Jumps to previous entry"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "goForward",
        "description": "Jumps to next entry"
      },
      {
        "nullable": null,
        "types": [
          "function(index: number):boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "canGo",
        "description": "Checks if history goes back or not"
      },
      {
        "nullable": null,
        "types": [
          "function(fn: RouterBlockHandler):function"
        ],
        "spread": false,
        "optional": false,
        "name": "block",
        "description": "Blocks history changes to ask user or run an another process then resume or break it."
      },
      {
        "nullable": null,
        "types": [
          "function(fn: HistoryListener):function"
        ],
        "spread": false,
        "optional": false,
        "name": "listen",
        "description": "Adds event-handlers to listen history changes."
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "History"
    }
  },
  {
    "__docId__": 370,
    "kind": "file",
    "name": "src/utils/map.js",
    "content": "/**\n * @ignore\n *\n */\nmodule.exports = function mapComposer(arr) {\n  return fn => arr.map(fn);\n};\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/src/utils/map.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 371,
    "kind": "function",
    "name": "exports",
    "memberof": "src/utils/map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/map.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@smartface/router/src/utils/map.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "ignore": true,
    "params": [
      {
        "name": "arr",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# Smartface Router\n\n[Read Documentation](https://smartface.github.io/router/)\n\n# What is a Router\n\nRouter is a concept that separates routing/navigation and the pages/views.\n\n## Types of Smartface Routers\n\nThere are 5 types of routers\n\n- [NativeRouter](https://smartface.github.io/router/class/src/native/NativeRouter.js~NativeRouter.html)\n- [NativeStackRouter](https://smartface.github.io/router/class/src/native/NativeStackRouter.js~NativeStackRouter.html)\n- [NativeBottomTabBarRouter](https://smartface.github.io/router/class/src/native/BottomTabBarRouter.js~BottomTabBarRouter.html)\n- NativeModalRouter (in roadmap)\n- NativeSplitRouter (in roadmap)\n- NativeTopTabBarRouter (in roadmap)\n\n## Installation\n\n```\n(cd ~/workspace/scripts && npm i @smartface/router)\n```\n\n## Common Usage\n\n```javascript\nconst {\n  NativeRouter: Router,\n  Router: RouterBase\n  NativeStackRouter: StackRouter,\n  BottomTabBarRouter,\n  Route\n} = require(\"@smartface/router\");\nconst Color = require(\"sf-core/ui/color\");\nconst Image = require(\"sf-core/ui/image\");\n\nconst router = Router.of({\n    path: \"/\",\n    to: \"/pages/page2\",\n    isRoot: true,\n    routes: [\n        Route.of(routeBinder({\n            path: \"/pages/page2\",\n            build: (router, route) => {\n                let Page2 = require(\"pages/page2\");\n                return new Page2();\n            }\n        })),\n        Route.of(routeBinder({\n            path: \"/pages/:name([0-9]*)\",\n            build: (router, route) => {\n                const { routeData, view } = route.getState();\n                let Page1 = require(\"pages/page1\");\n                return new Page1(routeData, router);\n            }\n        })),\n        StackRouter.of({\n            path: \"/stack\",\n            to: \"/stack/path1\",\n            headerBarParams: () => { ios: { translucent: true } },\n            routes: [\n                Route.of(routeBinder({\n                    path: \"/stack/path1\",\n                    build: (router, route) => new Page1(state.data, router)\n                })),\n                Route.of(routeBinder({\n                    path: \"/stack/path2\",\n                    routeShouldMatch: (route, nextState) => {\n                        if (!nextState.routeData.applied) {\n                            // blocks route changing\n                            return false;\n                        }\n                        return false;\n                    },\n                    build: (router, route) => {\n                        const { routeData, view } = route.getState();\n                        return new Page2(routeData, router);\n                    }\n                }))\n            ]\n        }),\n        BottomTabBarRouter.of({\n            path: \"/bottom\",\n            to: \"/bottom/stack2/path1\",\n            tabbarParams: () => ({\n                ios: { translucent: false },\n                itemColor: Color.RED,\n                unselectedItemColor: Color.YELLOW,\n                backgroundColor: Color.BLUE\n            }),\n            items: () => [{ title: \"page1\" }, { title: \"page2\" }, { title: \"page3\" }],\n            routes: [\n                StackRouter.of({\n                    path: \"/bottom/stack\",\n                    to: \"/bottom/stack/path1\",\n                    headerBarParams: () => { ios: { translucent: false } },\n                    routes: [\n                        Route.of(routeBinder({\n                            path: \"/bottom/stack/path1\",\n                            build: (router, route) => new Page1(route.getState().routeData, router, \"/stack/path2\")\n                        })),\n                        Route.of(routeBinder({\n                            path: \"/bottom/stack/path2\",\n                            build: (router, route) => {\n                                const { routeData, view } = route.getState();\n\n                                return new Page2(routeData, router, \"/bottom/stack2/path1\");\n                            }\n                        }))\n                    ]\n                }),\n                StackRouter.of({\n                    path: \"/bottom/stack2\",\n                    to: \"/bottom/stack2/path1\",\n                    headerBarParams: () => { ios: { translucent: false } },\n                    routes: [\n                        Route.of(routeBinder({\n                            path: \"/bottom/stack2/path1\",\n                            build: (router, route) => new Page1(route.getState().routeData, router, \"/bottom/stack/path2\")\n                        })),\n                        Route.of(routeBinder({\n                            path: \"/bottom/stack2/path2\",\n                            build: (router, route) => {\n                                return new Page2(route.getState().routeData, router);\n                            }\n                        }))\n                    ]\n                }),\n                Route.of(routeBinder({\n                    path: \"/bottom/page1\",\n                    build: (router, route) => {\n                        console.log(`route ${route}`);\n                        return new Page1(route.getState().routeData, router, \"/bottom/stack/path1\");\n                    }\n                }))\n            ]\n        })\n    ]\n});\n\nfunction routeBinder(params){\n\n    return Object.assign({},\n        params,\n        {\n            routeDidEnter: (router, route) => {\n                const {view} = route.getState();\n                view.onRouteEnter && view.onRouteEnter(router, route);\n                params.routeDidEnter && params.routeDidEnter(router, route)\n            },\n            routeDidExit: (router, route) => {\n                const {view} = route.getState();\n                view.onRouteExit && view.onRouteExit(router, route);\n                params.routeDidExit && params.routeDidExit(router, route)\n            }\n        });\n}\n\nconst unlisten = router.listen((location, action) => {\n    console.log(` ---- new route location: ${location.pathname} ${}`);\n});\n\nrouter.push(\"/bottom\");\n\n```\n\n## Blocking Routes\n\n```js\nvar unload = router.addRouteBlocker((path, routeData, action, ok) => {\n  alert({\n    message: \"Would you like to answer?\",\n    title: \"Question\", //optional\n    buttons: [\n      {\n        text: \"Yes\",\n        type: AlertView.Android.ButtonType.POSITIVE,\n        onClick: function() {\n          ok(true);\n        }\n      },\n      {\n        text: \"No\",\n        type: AlertView.Android.ButtonType.NEGATIVE,\n        onClick: function() {\n          ok(false);\n        }\n      }\n    ]\n  });\n});\n\nunload();\n```\n\n### Limitation\n\nThere are several actions that user can take, which cannot be blocked by the blocker. Those cases include:\n\n- **iOS HeaderBar**: It doesn't work with iOS default headerbar's back-button and back gesture. If you want to use in these cases, you must use custom back button and disable back gesture.\n- **Bottom TabBar**: Switching between the tabs cannot be prevented.\n\n## Listening history changes\n\n```js\nconst unlisten = router.getHistory().listen((location, action) => {\n  console.log(`new route action :  ${action} path : ${location.pathname}`);\n});\n\nunlisten();\n```\n\n## Common features of Routers\n\n- Nested routes\n- Route redirection\n- Route blocking\n- History listening\n\n# Contribute to Repository\n\n- Clone repo to workspace root folder. (Feel free to clone into the /workspace/scripts/node_modules/@smartface folder)\n\n```\ncd ~/workspace && git clone git@github.com:smartface/router.git\n```\n\n- TDD\n\n```\nnpm test -- --watch\n```\n\n- Syncronize router to scripts/node_modules/@smmartface/router (If you clone repo to /scripts/node_modules and you must not use that.)\n\n```\nnpm run dev:link\n```\n\n- Update documentation\n\n```\nnpx esdoc\n```\n",
    "longname": "/Users/sf/Desktop/router/router/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@smartface/router\",\n  \"version\": \"1.0.0-rc.1\",\n  \"description\": \"Smmartface Router\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"dev:link\": \"npm run dev:remove && npm run dev:sync\",\n    \"dev:remove\": \"rm -R -f ../scripts/node_modules/@smartface/router\",\n    \"dev:sync\": \"mkdir -p ../scripts/node_modules/@smartface/router && cp -r -t ../scripts/node_modules/@smartface/router src package.json \",\n    \"pretty\": \"prettier --write src/**/**\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/cenkce/router.git\"\n  },\n  \"jest\": {\n    \"testEnvironment\": \"node\"\n  },\n  \"author\": \"Cenk Cetinkaya\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/cenkce/router/issues\"\n  },\n  \"homepage\": \"https://github.com/cenkce/router#readme\",\n  \"dependencies\": {\n    \"path-to-regexp\": \"^2.4.0\",\n    \"resolve-pathname\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.6.1\",\n    \"eslint-config-prettier\": \"^3.0.1\",\n    \"jest\": \"^23.5.0\",\n    \"jsdoc-to-markdown\": \"^4.0.1\",\n    \"npm-bump\": \"0.0.25\",\n    \"prettier\": \"^1.14.2\"\n  }\n}\n",
    "longname": "/Users/sf/Desktop/router/router/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 372,
    "kind": "testFile",
    "name": "__test__/HistoryController.test.js",
    "content": "const Router = require(\"../src/router/Router\");\nconst Route = require(\"../src/router/Route\");\nconst matchRoutes = require(\"../src/common/matchRoutes\");\nconst createHistory = require(\"../src/common/createHistory\");\n\ndescribe(\"HistoryController\", () => {\n  afterEach(() => {\n    // Router.unloadHistory();\n  });\n\n  it(\"can create nested nodes\", () => {\n    var history = createHistory();\n    var node = history.createNode();\n    expect(node.constructor.name).toBe(\"HistoryController\");\n  });\n\n  it(\"can check url is valid or not\", () => {\n    let history = createHistory({ path: \"/path\" });\n    expect(history.canPush(\"/path\")).toBe(true);\n\n    history = createHistory({ path: \"/path1\" });\n    expect(history.canPush(\"/path\")).toBe(false);\n\n    history = createHistory({ path: \"/path1\" });\n    expect(history.canPush(\"/path2\")).toBe(false);\n\n    history = createHistory({ path: \"/path/subpath\" });\n    expect(history.canPush(\"/path\")).toBe(false);\n\n    history = createHistory({ path: \"/path\" });\n    expect(history.canPush(\"/path/subpath\")).toBe(true);\n  });\n\n  it(\"should be fires an event when route is changed\", () => {\n    var history = createHistory();\n    var _location;\n    history.listen((location, action) => {\n      _location = location;\n    });\n\n    history.push(\"/path\");\n\n    expect(_location.pathname).toBe(\"/path\");\n  });\n\n  it(\"cannot be affected when children's state is chenged\", () => {\n    var history = createHistory();\n    var node = history.createNode();\n    var node2 = history.createNode();\n    var node3 = history.createNode();\n    [node, node2, node3].forEach(listen);\n    var res = [];\n    var rootUnlisten = history.listen((location, action) => {\n      res.push(location.pathname);\n    });\n\n    function listen(node) {\n      node.listen((location, action) => {\n        res.push(location.pathname);\n      });\n    }\n\n    node.push(\"/path\");\n    node2.push(\"/path2\");\n    node3.push(\"/path3\");\n\n    expect(res).toEqual([\"/path\", \"/path2\", \"/path3\"]);\n  });\n\n  // it(\"can listen grandchild nodes\", () => {\n  //   var history = createHistory();\n  //   var node = history.createNode();\n  //   var grandNode1 = node.createNode();\n  //   var grandNode2 = node.createNode();w\n  //   var res = [];\n\n  //   [history, grandNode1, grandNode2, node].forEach(listen);\n\n  //   function listen(node) {\n  //     node.listen((location, action) => {\n  //       res.push(location.pathname);\n  //     });\n  //   }\n\n  //   grandNode1.push(\"/path\");\n  //   grandNode1.push(\"/path2\");\n  //   grandNode2.push(\"/path3\");\n  //   grandNode2.push(\"/path4\");\n  //   grandNode1.goBack();\n  //   grandNode2.goBack();\n\n  //   expect(res).toEqual([\n  //     \"/path\",\n  //     \"/path\",\n  //     \"/path\",\n  //     \"/path2\",\n  //     \"/path2\",\n  //     \"/path2\",\n  //     \"/path3\",\n  //     \"/path3\",\n  //     \"/path3\",\n  //     \"/path4\",\n  //     \"/path4\",\n  //     \"/path4\",\n  //     \"/path\",\n  //     \"/path\",\n  //     \"/path\",\n  //     \"/path3\",\n  //     \"/path3\",\n  //     \"/path3\"\n  //   ]);\n  // });\n\n  // it(\"can unlisten grandchild nodes\", () => {\n  //   var history = createHistory();\n  //   var node = history.createNode();\n  //   var grandNode = node.createNode();\n  //   var _location;\n  //   var _nodeLocation;\n  //   var rootUnlisten = history.listen((location, action) => {\n  //     _location = location;\n  //   });\n\n  //   var nodeUnlisten = node.listen((location, action) => {\n  //     _nodeLocation = location;\n  //   });\n\n  //   grandNode.push(\"/path\");\n  //   grandNode.push(\"/path2\");\n  //   expect(_nodeLocation.pathname).toBe(\"/path2\");\n  //   expect(_location.pathname).toBe(\"/path2\");\n  //   nodeUnlisten();\n  //   grandNode.goBack();\n  //   expect(_nodeLocation.pathname).toBe(\"/path2\");\n  //   expect(_location.pathname).toBe(\"/path\");\n  // });\n\n  it(\"can go back\", () => {\n    var history = createHistory();\n    var node = history.createNode();\n    var _location;\n    var _nodeLocation;\n    var rootUnlisten = history.listen((location, action) => {\n      _location = location;\n    });\n\n    var nodeUnlisten = node.listen((location, action) => {\n      _nodeLocation = location;\n    });\n\n    node.push(\"/path\");\n    node.push(\"/path2\");\n    expect(_nodeLocation.pathname).toBe(\"/path2\");\n    node.goBack();\n    expect(_nodeLocation.pathname).toBe(\"/path\");\n  });\n\n  it(\"can't go back if history is empty\", () => {\n    var history = createHistory();\n    var node = history.createNode();\n    var _location;\n    var _nodeLocation;\n    var counter = 0;\n    var rootUnlisten = history.listen((location, action) => {\n      _location = location;\n      counter++;\n    });\n\n    var nodeUnlisten = node.listen((location, action) => {\n      _nodeLocation = location;\n      counter++;\n    });\n\n    node.goBack();\n    expect(counter).toBe(0);\n    expect(_nodeLocation).toBe(undefined);\n    expect(_location).toBe(undefined);\n  });\n\n  it(\"can call parent go back if node history is empty\", () => {\n    var history = createHistory();\n    var node = history.createNode();\n    var _location;\n    var _nodeLocation;\n    var counter = 0;\n    var rootUnlisten = history.listen((location, action) => {\n      _location = location;\n      counter++;\n    });\n\n    var nodeUnlisten = node.listen((location, action) => {\n      _nodeLocation = location;\n      counter++;\n    });\n    history.push(\"/path/to\");\n    history.push(\"/path/to/2\");\n    node.push(\"/path/too\");\n    expect(_nodeLocation.pathname).toBe(\"/path/too\");\n    expect(_location.pathname).toBe(\"/path/to/2\");\n    node.goBack();\n    expect(_location.pathname).toBe(\"/path/to\");\n    expect(_nodeLocation.pathname).toBe(\"/path/too\");\n  });\n  it(\"can dispose\", () => {\n    var history = createHistory();\n    var node = history.createNode();\n    var _location;\n    var _nodeLocation;\n    var rootUnlisten = history.listen((location, action) => {\n      _location = location;\n    });\n\n    var nodeUnlisten = node.listen((location, action) => {\n      _nodeLocation = location;\n    });\n    history.dispose();\n    expect(() => history.push(\"/path/to\")).toThrow();\n    expect(() => node.push(\"/path/too\")).toThrow();\n    expect(_nodeLocation).toBe(undefined);\n    expect(_location).toBe(undefined);\n  });\n});\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/__test__/HistoryController.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 373,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "__test__/HistoryController.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__test__/HistoryController.test.js~describe0",
    "access": null,
    "description": "HistoryController",
    "lineNumber": 6
  },
  {
    "__docId__": 374,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "__test__/HistoryController.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/HistoryController.test.js~describe0.it1",
    "access": null,
    "description": "can create nested nodes",
    "lineNumber": 11
  },
  {
    "__docId__": 375,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "__test__/HistoryController.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/HistoryController.test.js~describe0.it2",
    "access": null,
    "description": "can check url is valid or not",
    "lineNumber": 17
  },
  {
    "__docId__": 376,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "__test__/HistoryController.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/HistoryController.test.js~describe0.it3",
    "access": null,
    "description": "should be fires an event when route is changed",
    "lineNumber": 34
  },
  {
    "__docId__": 377,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "__test__/HistoryController.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/HistoryController.test.js~describe0.it4",
    "access": null,
    "description": "cannot be affected when children's state is chenged",
    "lineNumber": 46
  },
  {
    "__docId__": 378,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "__test__/HistoryController.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/HistoryController.test.js~describe0.it5",
    "access": null,
    "description": "can go back",
    "lineNumber": 138
  },
  {
    "__docId__": 379,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "__test__/HistoryController.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/HistoryController.test.js~describe0.it6",
    "access": null,
    "description": "can't go back if history is empty",
    "lineNumber": 158
  },
  {
    "__docId__": 380,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "__test__/HistoryController.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/HistoryController.test.js~describe0.it7",
    "access": null,
    "description": "can call parent go back if node history is empty",
    "lineNumber": 180
  },
  {
    "__docId__": 381,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "__test__/HistoryController.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/HistoryController.test.js~describe0.it8",
    "access": null,
    "description": "can dispose",
    "lineNumber": 204
  },
  {
    "__docId__": 382,
    "kind": "testFile",
    "name": "__test__/Route.test.js",
    "content": "const Route = require(\"../src/router/Route\");\nconst matchRoutes = require(\"../src/common/matchRoutes\");\n\ndescribe(\"Route\", () => {\n  it(\"has a path\", () => {\n    const route = new Route({ path: \"/path\" });\n\n    expect(route.getPath().getPath()).toBe(\"/path\");\n  });\n\n  it(\"has a target\", () => {\n    const target = {};\n    const route = new Route({ path: \"path\", build: () => target });\n\n    expect(route._build()).toBe(target);\n  });\n\n  it(\"can match with valid url\", () => {\n    const target = {};\n    const route = new Route({\n      path: \"/path/to\",\n      routes: [\n        new Route({ path: \"/path/to/:id\" }),\n        new Route({ path: \"/path/to/cenk\" })\n      ]\n    });\n    const matches = matchRoutes([route], \"/path/to/1\").map(\n      ({ match, route }) => ({ match })\n    );\n\n    expect(matches).toEqual([\n      {\n        match: { isExact: false, params: {}, path: \"/path/to\", url: \"/path/to\" }\n      },\n      {\n        match: {\n          isExact: true,\n          params: { id: \"1\" },\n          path: \"/path/to/:id\",\n          url: \"/path/to/1\"\n        }\n      }\n    ]);\n  });\n\n  it(\"can run nested build methods\", () => {\n    const route = Route.of({\n      path: \"/\",\n      routes: [\n        Route.of({\n          path: \"/path/to\",\n          build: () => {\n            type: \"target1\";\n          }\n        })\n      ]\n    });\n  });\n\n  it(\"can't match with invalid url\", () => {\n    const target = {};\n    const route = new Route({ path: \"/path\" });\n    const match = route.matchPath(\"/path/to/1\");\n    // console.log(match);\n\n    expect(match).toEqual({\n      isExact: false,\n      params: {},\n      path: \"/path\",\n      url: \"/path\"\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/__test__/Route.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 383,
    "kind": "test",
    "name": "describe9",
    "testId": 9,
    "memberof": "__test__/Route.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__test__/Route.test.js~describe9",
    "access": null,
    "description": "Route",
    "lineNumber": 4
  },
  {
    "__docId__": 384,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "__test__/Route.test.js~describe9",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Route.test.js~describe9.it10",
    "access": null,
    "description": "has a path",
    "lineNumber": 5
  },
  {
    "__docId__": 385,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "__test__/Route.test.js~describe9",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Route.test.js~describe9.it11",
    "access": null,
    "description": "has a target",
    "lineNumber": 11
  },
  {
    "__docId__": 386,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "__test__/Route.test.js~describe9",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Route.test.js~describe9.it12",
    "access": null,
    "description": "can match with valid url",
    "lineNumber": 18
  },
  {
    "__docId__": 387,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "__test__/Route.test.js~describe9",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Route.test.js~describe9.it13",
    "access": null,
    "description": "can run nested build methods",
    "lineNumber": 46
  },
  {
    "__docId__": 388,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "__test__/Route.test.js~describe9",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Route.test.js~describe9.it14",
    "access": null,
    "description": "can't match with invalid url",
    "lineNumber": 60
  },
  {
    "__docId__": 389,
    "kind": "testFile",
    "name": "__test__/Router.test.js",
    "content": "const Router = require(\"../src/router/Router\");\nconst Route = require(\"../src/router/Route\");\nconst matchRoutes = require(\"../src/common/matchRoutes\");\n\ndescribe(\"Router\", () => {\n  afterEach(() => {\n    // Router.unloadHistory();\n  });\n  it(\"has routes\", () => {\n    const router = new Router({\n      isRoot: true,\n      routes: [\n        new Route(\"/path/to/:name\"),\n        new Route(\"/path/to/:id\"),\n        new Route(\"/path/to\")\n      ]\n    });\n    let routes = [];\n    router.map(route => {\n      routes.push(route);\n    });\n    expect(routes.length).toBe(3);\n  });\n\n  it(\"fires an event when history is changed\", () => {\n    const router = new Router({\n      path: \"/\",\n      exact: false,\n      isRoot: true,\n      routes: [\n        new Route({\n          path: \"/path/to/:name\",\n          build: (router, route) => ({\n            type: \"target1\"\n          })\n        }),\n        new Route({\n          path: \"/path/to/:id\",\n          build: (router, route) => ({\n            type: \"target2\"\n          })\n        }),\n        new Route({ path: \"*\", build: (props, match) => ({ type: \"target3\" }) })\n      ]\n    });\n    // let matches = matchRoutes([router], \"/path/to/1\").map(\n    //   ({ match, route }) => ({ match, route: route.toObject(), view: route.build() })\n    // );\n    router.push(\"/path/to/1\");\n    expect(router.getHistory().length > 0).toBe(true);\n  });\n\n  it(\"should add last route to child owner router.\", () => {\n    let _router1;\n    let _router2;\n    let lastUrl;\n    const router = new Router({\n      path: \"/\",\n      exact: false,\n      isRoot: true,\n      routes: [\n        new Router({\n          path: \"/path\",\n          routes: [\n            new Router({\n              path: \"/path/to\",\n              routes: [\n                new Route({\n                  path: \"/path/to/the/:id\",\n                  build: (router, route) => {\n                    _router1 = router;\n                    lastUrl = route.getState().match.url;\n                    return { type: \"target2\" };\n                  }\n                })\n              ]\n            })\n          ]\n        }),\n        new Router({\n          path: \"/path2\",\n          build: (router, route) => ({\n            type: \"target1\"\n          }),\n          routes: [\n            new Route({\n              path: \"/path2/to/:id\",\n              build: (router, route) => {\n                lastUrl = route.getState().match.url;\n                _router2 = router;\n                return { type: \"target2\" };\n              }\n            })\n          ]\n        }),\n        new Route({ path: \"*\", build: (props, match) => ({ type: \"target3\" }) })\n      ]\n    });\n    // let matches = matchRoutes([router], \"/path/to/1\").map(\n    //   ({ match, route }) => ({ match, route: route.toObject(), view: route.build() })\n    // );\n    router.push(\"/path/to/the/1\");\n    expect(lastUrl).toBe(\"/path/to/the/1\");\n\n    _router1.push(\"/path2/to/1\");\n    expect(lastUrl).toBe(\"/path2/to/1\");\n\n    _router2.push(\"/path/to/the/2\");\n    expect(lastUrl).toBe(\"/path/to/the/2\");\n\n    _router1.goBack();\n    expect(lastUrl).toBe(\"/path/to/the/1\");\n\n    _router2.goBack();\n    expect(lastUrl).toBe(\"/path2/to/1\");\n\n    _router2.goBack();\n    expect(lastUrl).toBe(\"/path/to/the/1\");\n\n    expect(router.getHistoryasArray()).toEqual([\n      \"/path/to/the/1\",\n      \"/path2/to/1\",\n      \"/path/to/the/2\"\n    ]);\n    expect(_router1.getHistoryasArray()).toEqual([\n      \"/path/to/the/1\",\n      \"/path/to/the/2\"\n    ]);\n    expect(_router2.getHistoryasArray()).toEqual([\"/path2/to/1\"]);\n  });\n\n  it(\"should add last route to child owner router whenever a route redirects.\", () => {\n    let _router1;\n    let _router2;\n    let lastUrl;\n    const router = new Router({\n      path: \"/\",\n      to: \"/path/to/the/1\",\n      exact: false,\n      isRoot: true,\n      routes: [\n        new Router({\n          path: \"/path\",\n          to: \"/path/to/the/2\",\n          routes: [\n            new Router({\n              path: \"/path/to\",\n              routes: [\n                new Route({\n                  path: \"/path/to/the/:id\",\n                  build: (router, route) => {\n                    _router1 = router;\n                    lastUrl = route.getState().match.url;\n                    return { type: \"target2\" };\n                  }\n                })\n              ]\n            })\n          ]\n        }),\n        new Router({\n          path: \"/path2\",\n          build: (router, route) => ({\n            type: \"target1\"\n          }),\n          routes: [\n            new Route({\n              path: \"/path2/to/:id\",\n              build: (router, route) => {\n                lastUrl = route.getState().match.url;\n                _router2 = router;\n                return { type: \"target2\" };\n              }\n            })\n          ]\n        }),\n        new Route({ path: \"*\", build: (props, match) => ({ type: \"target3\" }) })\n      ]\n    });\n    // let matches = matchRoutes([router], \"/path/to/1\").map(\n    //   ({ match, route }) => ({ match, route: route.toObject(), view: route.build() })\n    // );\n\n    router.listen((location, action) => {\n      console.log(\"---------------\");\n      console.log(location.pathname, action);\n      console.log(router.getHistoryasArray());\n    });\n    router.push(\"/\");\n    expect(lastUrl).toBe(\"/path/to/the/1\");\n    expect(_router1.getHistoryasArray()).toEqual([\"/path/to/the/1\"]);\n\n    _router1.push(\"/path2/to/1\");\n    expect(lastUrl).toBe(\"/path2/to/1\");\n\n    _router2.push(\"/path\");\n    expect(lastUrl).toBe(\"/path/to/the/2\");\n    expect(_router1.getHistoryasArray()).toEqual([\n      \"/path/to/the/1\",\n      \"/path/to/the/2\"\n    ]);\n\n    _router1.goBack();\n    expect(lastUrl).toBe(\"/path/to/the/1\");\n    expect(_router1.getHistoryasArray()).toEqual([\n      \"/path/to/the/1\",\n      \"/path/to/the/2\"\n    ]);\n\n    _router2.goBack();\n    expect(lastUrl).toBe(\"/path2/to/1\");\n\n    _router2.goBack();\n    expect(lastUrl).toBe(\"/path/to/the/1\");\n\n    expect(router.getHistoryasArray()).toEqual([\n      \"/path/to/the/1\",\n      \"/path2/to/1\",\n      \"/path/to/the/2\"\n    ]);\n    expect(_router1.getHistoryasArray()).toEqual([\n      \"/path/to/the/1\",\n      \"/path/to/the/2\"\n    ]);\n    expect(_router2.getHistoryasArray()).toEqual([\"/path2/to/1\"]);\n  });\n\n  it(\"finds target by url\", () => {\n    const router = new Router({\n      path: \"/\",\n      exact: false,\n      isRoot: true,\n      routes: [\n        new Route({\n          path: \"/path/to/:name\",\n          build: (props, match) => ({\n            type: \"target1\"\n          })\n        }),\n        new Route({\n          path: \"/path/to/:id\",\n          build: (props, match) => ({\n            type: \"target2\"\n          })\n        }),\n        new Route({ path: \"*\", build: (props, match) => ({ type: \"target3\" }) })\n      ]\n    });\n    // let matches = matchRoutes([router], \"/path/to/1\").map(\n    //   ({ match, route }) => ({ match, route: route.toObject(), view: route.build() })\n    // );\n    var matches = router\n      .push(\"/path/to/1\")\n      ._matches.map(({ match, route }) => ({\n        match,\n        route: route.toObject(),\n        view: route.build()\n      }));\n\n    expect(matches).toEqual([\n      {\n        match: { isExact: false, params: {}, path: \"/\", url: \"/\" },\n        route: {\n          path: \"/\",\n          routes: [\n            { path: \"/path/to/:name\", routes: [] },\n            { path: \"/path/to/:id\", routes: [] },\n            { path: \"*\", routes: [] }\n          ]\n        },\n        view: null\n      },\n      {\n        match: {\n          isExact: true,\n          params: { name: \"1\" },\n          path: \"/path/to/:name\",\n          url: \"/path/to/1\"\n        },\n        route: { path: \"/path/to/:name\", routes: [] },\n        view: { type: \"target1\" }\n      }\n    ]);\n  });\n  it(\"return only root path if any route doesn't be matched\", () => {\n    const router = new Router({\n      path: \"/\",\n      isRoot: true,\n      routes: [\n        new Route({\n          path: \"/path/to/:name\",\n          build: () => {\n            type: \"target1\";\n          }\n        }),\n        new Route({\n          path: \"/path/to/:id\",\n          build: () => {\n            type: \"target2\";\n          }\n        }),\n        new Route({ path: \"*\", build: { type: \"target3\" } })\n      ]\n    });\n\n    let matches = router.push(\"/path/to\")._matches;\n    expect(matches.map(({ match }) => match)).toEqual([\n      {\n        isExact: false,\n        params: {},\n        path: \"/\",\n        url: \"/\"\n      }\n    ]);\n  });\n\n  it(\"sends data and params to specified route\", () => {\n    let data;\n    const router = new Router({\n      path: \"/\",\n      isRoot: true,\n      routes: [\n        new Route({\n          path: \"/path/to/:name\",\n          build: (router, route) => {\n            data = route.getState();\n            return { type: \"target1\" };\n          }\n        }),\n        new Route({\n          path: \"/path/too/:name\",\n          build: () => {\n            type: \"target2\";\n          }\n        }),\n        new Route({ path: \"*\", build: { type: \"target3\" } })\n      ]\n    });\n    let matches = router.push(\"/path/to/1\", { name: \"name\" });\n    expect(data.match.params).toEqual({ name: \"1\" });\n    expect(data.routeData).toEqual({ name: \"name\" });\n  });\n  it(\"gets history back\", () => {\n    let data;\n    let callCount = 0;\n    var component = {};\n    const router = new Router({\n      path: \"/\",\n      isRoot: true,\n      routes: [\n        new Router({\n          path: \"/path\",\n          routes: [\n            new Route({\n              path: \"/path/to/:name\",\n              build: (router, route) => {\n                data = route.getState();\n                callCount++;\n                return { type: \"target1\" };\n              }\n            }),\n            new Route({\n              path: \"/path/too/:name\",\n              build: (router, route) => {\n                component.router = router;\n                return component;\n              }\n            }),\n            new Route({ path: \"*\", build: { type: \"target3\" } })\n          ]\n        })\n      ]\n    });\n\n    router.push(\"/path/to/1\", { name: \"name1\" });\n    expect(data.match.params).toEqual({ name: \"1\" });\n    expect(data.routeData).toEqual({ name: \"name1\" });\n\n    router.push(\"/path/too/dev\", { name: \"name2\" });\n    component.router.goBack();\n    // console.log(data.match);\n    expect(data.match.params).toEqual({ name: \"1\" });\n    expect(data.routeData).toEqual({ name: \"name1\" });\n\n    expect(component.router === router).toBe(false);\n    expect(callCount).toBe(2);\n  });\n\n  it(\"calls back to parent if its history is empty\", () => {\n    let route;\n    let callCount = 0;\n    var component = {};\n\n    const router = new Router({\n      path: \"/\",\n      isRoot: true,\n      routes: [\n        new Route({\n          path: \"/path2/to/:name\",\n          build: (router, _route) => {\n            route = _route;\n            callCount++;\n            return { type: \"target1\" };\n          }\n        }),\n        new Router({\n          path: \"/path\",\n          routes: [\n            new Route({\n              path: \"/path/to/:name\",\n              build: (router, _route) => {\n                route = _route;\n                callCount++;\n                component.router = router;\n                data = route.getState();\n                return component;\n              }\n            }),\n            new Route({\n              path: \"*\",\n              build: (router, route) => {\n                type: \"target3\";\n              }\n            })\n          ]\n        })\n      ]\n    });\n\n    router.push(\"/path2/to/1\", { name: \"name1\" });\n    expect(route.getState().routeData).toEqual({ name: \"name1\" });\n    router.push(\"/path/to/dev\", { name: \"name2\" });\n    expect(route.getState().routeData).toEqual({ name: \"name2\" });\n    component.router.goBack();\n    expect(route.getState().routeData).toEqual({ name: \"name1\" });\n    expect(callCount).toBe(3);\n  });\n  it(\"can call a relative path\", () => {\n    let data;\n    let callCount = 0;\n    var component1 = {};\n    var component2 = {};\n\n    const router = new Router({\n      path: \"/\",\n      isRoot: true,\n      routes: [\n        new Route({\n          path: \"/path2/to/:name\",\n          build: (match, state, router) => {\n            data = {\n              params: match.params,\n              state\n            };\n            // component.router = router;\n            callCount++;\n            return { type: \"target1\" };\n          }\n        }),\n        new Router({\n          path: \"/path\",\n          routes: [\n            new Route({\n              path: \"/path/to/:name([a-zA-Z]*)\",\n              build: (router, route) => {\n                const { match } = route.getState();\n                component1.router = router;\n                component1.params = match.params;\n                return component1;\n              }\n            }),\n            new Route({\n              path: \"/path/to/:id\",\n              build: (router, route) => {\n                const { match } = route.getState();\n                component2.router = router;\n                component2.params = match.params;\n                return component2;\n              }\n            })\n          ]\n        })\n      ]\n    });\n\n    router.push(\"/path/to/cenk\", { name: \"name\" });\n    component1.router.push(\"/path/to/1123\", { name: \"name\" });\n\n    // expect(component1.router === router).toBe(false);\n    // expect(component1.params.name).toBe(\"cenk\");\n    expect(component2.params.id).toBe(\"1123\");\n    expect(router.getHistory().entries.map(entry => entry.pathname)).toEqual([\n      \"/path/to/cenk\"\n    ]);\n  });\n\n  it(\"can be blocked\", () => {\n    let callCount = 0;\n    var component1 = {};\n    const router = new Router({\n      path: \"/\",\n      isRoot: true,\n      routes: [\n        new Route({\n          path: \"/path/to/:name([a-zA-Z]*)\",\n          build: (match, state, router) => {\n            component1.router = router;\n            component1.params = match.params;\n            return component1;\n          }\n        }),\n        new Route({\n          path: \"/path/to/:id\",\n          build: (match, state, router, view) => {\n            return component1;\n          }\n        })\n      ]\n    });\n\n    const unlisten = router.addRouteBlocker(\n      (path, routeData, action, callback) => {\n        callback(false);\n      }\n    );\n\n    router.push(\"/path/to/cenk\", { name: \"name\" });\n    expect(router.getHistory().entries).toEqual([]);\n    unlisten();\n    router.push(\"/path/to/cenk\", { name: \"name\" });\n    router.addRouteBlocker((path, routeData, action, callback) => {\n      callback(true);\n    });\n\n    expect(router.getHistory().entries[0].pathname).toBe(\"/path/to/cenk\");\n  });\n\n  it(\"can redirect to specified route with route-data when route has 'to' attribute\", () => {\n    let callCount = 0;\n    var component1 = {};\n    var activeRoute;\n    const router = new Router({\n      path: \"/\",\n      isRoot: true,\n      routes: [\n        new Route({\n          path: \"/path\",\n          to: \"/path2/to/1\",\n          build: (router, route) => {\n            const { match } = route.getState();\n            component1.router = router;\n            component1.params = match.params;\n            return component1;\n          }\n        }),\n        new Route({\n          path: \"/path2/to/:id\",\n          build: (router, route) => {\n            activeRoute = route;\n            return component1;\n          }\n        })\n      ]\n    });\n\n    router.push(\"/path\", { name: \"name\" });\n    expect(router.getHistory().entries[0].pathname).toBe(\"/path2/to/1\");\n    expect(activeRoute.getState().routeData).toEqual({ name: \"name\" });\n  });\n  it(\"can call child Routers\", () => {\n    let callCount = 0;\n    var component1 = {};\n    var component2 = {};\n\n    var router1 = Router.of({\n      path: \"/stack1\",\n      to: \"/stack1/to/1\",\n      routes: [\n        new Route({\n          path: \"/stack1/to/1\",\n          build: (router, route) => {\n            const { match } = route.getState();\n            component1.router = router;\n            component1.params = match.params;\n            return component1;\n          }\n        }),\n        new Route({\n          path: \"/stack1/to/:id\",\n          build: (match, state, router, view) => {\n            return component1;\n          }\n        })\n      ]\n    });\n\n    var router2 = Router.of({\n      path: \"/stack2\",\n      to: \"/stack2/to/1\",\n      routes: [\n        new Route({\n          path: \"/stack2/to/1\",\n          build: (router, route) => {\n            const { match } = route.getState();\n            component2.router = router;\n            component2.params = match.params;\n            return component2;\n          }\n        }),\n        new Route({\n          path: \"/stack2/to/:id\",\n          build: (match, state, router, view) => {\n            return component1;\n          }\n        })\n      ]\n    });\n\n    const router = new Router({\n      path: \"/\",\n      isRoot: true,\n      routes: [router1, router2]\n    });\n\n    router.push(\"/stack1\", { name: \"name\" });\n    expect(component1.router).toBe(router1);\n    router.push(\"/stack2\", { name: \"name\" });\n    expect(component2.router).toBe(router2);\n  });\n\n  it(\"should be routed from child Routers\", () => {\n    let callCount = 0;\n    var component1 = {};\n    var component2 = {};\n\n    var router1 = Router.of({\n      path: \"/stack1\",\n      to: \"/stack1/to/1\",\n      routes: [\n        new Route({\n          path: \"/stack1/to/1\",\n          build: (router, route) => {\n            component1.router = router;\n            component1.params = route.getState().match.params;\n            return component1;\n          }\n        }),\n        new Route({\n          path: \"/stack1/to/:id\",\n          build: (router, rotue) => {\n            return component1;\n          }\n        })\n      ]\n    });\n\n    router1.name = \"router1\";\n\n    var router2 = Router.of({\n      path: \"/stack2\",\n      to: \"/stack2/to/1\",\n      routes: [\n        new Route({\n          path: \"/stack2/to/1\",\n          build: (router, route) => {\n            component2.router = router;\n            component2.params = route.getState().match.params;\n            return component2;\n          }\n        }),\n        new Route({\n          path: \"/stack2/to/:id\",\n          build: (router, route) => {\n            component2.url = route.getState().match.url;\n            return component2;\n          }\n        })\n      ]\n    });\n\n    router2.name = \"router2\";\n\n    const router = new Router({\n      path: \"/\",\n      isRoot: true,\n      routes: [router1, router2]\n    });\n\n    router.push(\"/stack1\", { name: \"name\" });\n    expect(component1.router).toBe(router1);\n\n    component1.router.push(\"/stack2\", { name: \"name\" });\n    expect(component2.router).toBe(router2);\n\n    component2.router.push(\"/stack2/to/2\", { name: \"name\" });\n    expect(component2.url).toBe(\"/stack2/to/2\");\n  });\n});\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/__test__/Router.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 390,
    "kind": "test",
    "name": "describe15",
    "testId": 15,
    "memberof": "__test__/Router.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__test__/Router.test.js~describe15",
    "access": null,
    "description": "Router",
    "lineNumber": 5
  },
  {
    "__docId__": 391,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it16",
    "access": null,
    "description": "has routes",
    "lineNumber": 9
  },
  {
    "__docId__": 392,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it17",
    "access": null,
    "description": "fires an event when history is changed",
    "lineNumber": 25
  },
  {
    "__docId__": 393,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it18",
    "access": null,
    "description": "should add last route to child owner router.",
    "lineNumber": 53
  },
  {
    "__docId__": 394,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it19",
    "access": null,
    "description": "should add last route to child owner router whenever a route redirects.",
    "lineNumber": 132
  },
  {
    "__docId__": 395,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it20",
    "access": null,
    "description": "finds target by url",
    "lineNumber": 228
  },
  {
    "__docId__": 396,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it21",
    "access": null,
    "description": "return only root path if any route doesn't be matched",
    "lineNumber": 285
  },
  {
    "__docId__": 397,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it22",
    "access": null,
    "description": "sends data and params to specified route",
    "lineNumber": 317
  },
  {
    "__docId__": 398,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it23",
    "access": null,
    "description": "gets history back",
    "lineNumber": 343
  },
  {
    "__docId__": 399,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it24",
    "access": null,
    "description": "calls back to parent if its history is empty",
    "lineNumber": 389
  },
  {
    "__docId__": 400,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it25",
    "access": null,
    "description": "can call a relative path",
    "lineNumber": 438
  },
  {
    "__docId__": 401,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it26",
    "access": null,
    "description": "can be blocked",
    "lineNumber": 497
  },
  {
    "__docId__": 402,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it27",
    "access": null,
    "description": "can redirect to specified route with route-data when route has 'to' attribute",
    "lineNumber": 538
  },
  {
    "__docId__": 403,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it28",
    "access": null,
    "description": "can call child Routers",
    "lineNumber": 570
  },
  {
    "__docId__": 404,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "__test__/Router.test.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/Router.test.js~describe15.it29",
    "access": null,
    "description": "should be routed from child Routers",
    "lineNumber": 631
  },
  {
    "__docId__": 405,
    "kind": "testFile",
    "name": "__test__/matchRoutes.test.js",
    "content": "const Route = require(\"../src/router/Route\");\nconst matchRoutes = require(\"../src/common/matchRoutes\");\n\ndescribe(\"Match Routes\", () => {\n  it(\"can match with param\", () => {\n    const routes = [\n      new Route({\n        path: \"/new-path\",\n        routes: [new Route({ path: \"/new-path/:name\" })]\n      })\n    ];\n\n    const matches = matchRoutes(routes, \"/new-path/cenkce\").map(\n      ({ match, route }) => ({ match, route: route.toObject() })\n    );\n\n    expect(matches).toEqual([\n      {\n        match: {\n          isExact: false,\n          params: {},\n          path: \"/new-path\",\n          url: \"/new-path\"\n        },\n        route: {\n          path: \"/new-path\",\n          routes: [{ path: \"/new-path/:name\", routes: [] }]\n        }\n      },\n      {\n        match: {\n          isExact: true,\n          params: { name: \"cenkce\" },\n          path: \"/new-path/:name\",\n          url: \"/new-path/cenkce\"\n        },\n        route: { path: \"/new-path/:name\", routes: [] }\n      }\n    ]);\n  });\n  it(\"gets routes if parameter is just numeric\", () => {\n    const routes = [\n      new Route({\n        path: \"/new-path\",\n        routes: [new Route({ path: \"/new-path/:id(\\\\d+)\" })]\n      })\n    ];\n\n    {\n      const matches = matchRoutes(routes, \"/new-path/cenkce\").map(\n        ({ match, route }) => ({ match, route: route.toObject() })\n      );\n\n      expect(matches).toEqual([\n        {\n          match: {\n            isExact: false,\n            params: {},\n            path: \"/new-path\",\n            url: \"/new-path\"\n          },\n          route: {\n            path: \"/new-path\",\n            routes: [{ path: \"/new-path/:id(\\\\d+)\", routes: [] }]\n          }\n        }\n      ]);\n    }\n    {\n      const matches = matchRoutes(routes, \"/new-path/123\").map(\n        ({ match, route }) => ({ match, route: route.toObject() })\n      );\n      expect(matches).toEqual([\n        {\n          match: {\n            isExact: false,\n            params: {},\n            path: \"/new-path\",\n            url: \"/new-path\"\n          },\n          route: {\n            path: \"/new-path\",\n            routes: [{ path: \"/new-path/:id(\\\\d+)\", routes: [] }]\n          }\n        },\n        {\n          match: {\n            isExact: true,\n            params: { id: \"123\" },\n            path: \"/new-path/:id(\\\\d+)\",\n            url: \"/new-path/123\"\n          },\n          route: { path: \"/new-path/:id(\\\\d+)\", routes: [] }\n        }\n      ]);\n    }\n  });\n  it(\"mathes routes if parameter is alphanumeric\", () => {\n    const routes = [\n      new Route({\n        path: \"/new-path\",\n        routes: [new Route({ path: \"/new-path/:name([A-Za-z0-9]*)\" })]\n      })\n    ];\n\n    {\n      const matches = matchRoutes(routes, \"/new-path/cenkce\").map(\n        ({ match, route }) => ({ match, route: route.toObject() })\n      );\n\n      [\n        {\n          match: {\n            path: \"/new-path\",\n            url: \"/new-path\",\n            isExact: false,\n            params: {}\n          },\n          route: {\n            path: \"/new-path\",\n            routes: [\n              {\n                path: null,\n                routes: []\n              }\n            ]\n          }\n        }\n      ];\n      expect(matches).toEqual([\n        {\n          match: {\n            isExact: false,\n            params: {},\n            path: \"/new-path\",\n            url: \"/new-path\"\n          },\n          route: {\n            path: \"/new-path\",\n            routes: [{ path: \"/new-path/:name([A-Za-z0-9]*)\", routes: [] }]\n          }\n        },\n        {\n          match: {\n            isExact: true,\n            params: { name: \"cenkce\" },\n            path: \"/new-path/:name([A-Za-z0-9]*)\",\n            url: \"/new-path/cenkce\"\n          },\n          route: { path: \"/new-path/:name([A-Za-z0-9]*)\", routes: [] }\n        }\n      ]);\n    }\n    {\n      const matches = matchRoutes(routes, \"/new-path/abc123\").map(\n        ({ match, route }) => ({ match, route: route.toObject() })\n      );\n      expect(matches).toEqual([\n        {\n          match: {\n            isExact: false,\n            params: {},\n            path: \"/new-path\",\n            url: \"/new-path\"\n          },\n          route: {\n            path: \"/new-path\",\n            routes: [{ path: \"/new-path/:name([A-Za-z0-9]*)\", routes: [] }]\n          }\n        },\n        {\n          match: {\n            isExact: true,\n            params: { name: \"abc123\" },\n            path: \"/new-path/:name([A-Za-z0-9]*)\",\n            url: \"/new-path/abc123\"\n          },\n          route: { path: \"/new-path/:name([A-Za-z0-9]*)\", routes: [] }\n        }\n      ]);\n    }\n  });\n});\n",
    "static": true,
    "longname": "/Users/sf/Desktop/router/router/__test__/matchRoutes.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 406,
    "kind": "test",
    "name": "describe30",
    "testId": 30,
    "memberof": "__test__/matchRoutes.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__test__/matchRoutes.test.js~describe30",
    "access": null,
    "description": "Match Routes",
    "lineNumber": 4
  },
  {
    "__docId__": 407,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "__test__/matchRoutes.test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/matchRoutes.test.js~describe30.it31",
    "access": null,
    "description": "can match with param",
    "lineNumber": 5
  },
  {
    "__docId__": 408,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "__test__/matchRoutes.test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/matchRoutes.test.js~describe30.it32",
    "access": null,
    "description": "gets routes if parameter is just numeric",
    "lineNumber": 41
  },
  {
    "__docId__": 409,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "__test__/matchRoutes.test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "__test__/matchRoutes.test.js~describe30.it33",
    "access": null,
    "description": "mathes routes if parameter is alphanumeric",
    "lineNumber": 98
  }
]